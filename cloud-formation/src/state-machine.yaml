Comment: Carries out the steps needed to create a Monthly Contributor
StartAt: CreatePaymentMethod
States:
  CreatePaymentMethod:
    Type: Task
    Resource: "${CreatePaymentMethodLambda.Arn}"
    Next: CreateSalesforceContact
    $state_machine_retries
  CreateSalesforceContact:
    Type: Task
    Resource: "${CreateSalesforceContactLambda.Arn}"
    Next: CreateZuoraSubscription
    $state_machine_retries
  CreateZuoraSubscription:
    Type: Task
    Resource: "${CreateZuoraSubscriptionLambda.Arn}"
    Next: SendThankYouEmailAndUpdateMembersDataAPI
    $state_machine_retries
  SendThankYouEmailAndUpdateMembersDataAPI:
    Type: Parallel
    Branches:
    - StartAt: SendThankYouEmail
      States:
        SendThankYouEmail:
          Type: Task
          Resource: "${SendThankYouEmailLambda.Arn}"
          End: True
          Retry: # We don't want to invoke the failure handler for the thank you email because signup has succeeded by this point
          - ErrorEquals:
            - com.gu.support.workers.exceptions.RetryLimited
            IntervalSeconds: 1
            MaxAttempts: 3
            BackoffRate: 2
          - ErrorEquals:
            - com.gu.support.workers.exceptions.RetryUnlimited
            IntervalSeconds: 1
            BackoffRate: 2
    - StartAt: UpdateMembersDataAPI
      States:
        UpdateMembersDataAPI:
          Type: Task
          Resource: "${UpdateMembersDataAPILambda.Arn}"
          End: True
          Retry: # We don't want to invoke the failure handler for the update members data API because signup has succeeded by this point
          - ErrorEquals:
            - com.gu.support.workers.exceptions.RetryLimited
            IntervalSeconds: 1
            MaxAttempts: 3
            BackoffRate: 2
          - ErrorEquals:
            - com.gu.support.workers.exceptions.RetryUnlimited
            IntervalSeconds: 1
            BackoffRate: 2
    End: True
  FailureHandler:
    Type: Task
    Resource: "${FailureHandlerLambda.Arn}"
    End: True