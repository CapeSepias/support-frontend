{
    "TS1208": {
        "count": 1,
        "instances": [
            {
                "path": "assets-ts/__mocks__/styleMock.ts",
                "message": "'styleMock.ts' cannot be compiled under '--isolatedModules' because it is considered a global script file. Add an import, export, or an empty 'export {}' statement to make it a module."
            }
        ]
    },
    "TS2305": {
        "count": 61,
        "instances": [
            {
                "path": "assets-ts/components/asyncronously/asyncronously.ts",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/base/rows.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/blockLabel/blockLabel.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/button/_sharedButton.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/checkoutExpander/checkoutExpander.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/checkoutForm/checkoutForm.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/checkoutForm/checkoutForm.tsx",
                "message": "Module '\"react\"' has no exported member 'ChildrenArray'."
            },
            {
                "path": "assets-ts/components/containers/centredContainer.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/containers/flexContainer.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/containers/fullWidthContainer.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/content/content.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/content/contentSimple.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/dialog/dialog.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/errorMessage/errorMessage.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/footer/footer.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/footerCompliant/containers/Content.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/footerCompliant/containers/FooterContent.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/forms/customFields/error.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/forms/customFields/options.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/forms/label.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/generalErrorMessage/generalErrorMessage.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/gridImage/gridImage.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/headers/header/header.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/headers/header/mobileMenuToggler.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/headers/mobileMenu/mobileMenu.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/headers/veggieBurgerButton/veggieBurgerButton.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/heading/heading.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/headingBlock/headingBlock.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/leftMarginSection/leftMarginSection.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/list/orderedList.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/list/unorderedList.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/menu/menu.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/orderSummary/orderSummary.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/page/block.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/page/hero.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/page/heroRoundel.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/page/pageTitle.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/pageSection/pageSection.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/product/productInfoChip.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/product/productOptionSmall.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/productPage/productPageHero/productPageHero.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/quote/quote.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/layout.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/paymentMethodSelector.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stage.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/tabs/tabs.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/components/text/text.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/helpers/forms/stripe.ts",
                "message": "Module '\"@stripe/stripe-js/pure\"' has no exported member 'Stripe'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/validation.ts",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/helpers/timeBoundedCopy/timeBoundedCopy.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardFormField.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/thankYou/pageSection.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/hero/heroPriceCards.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlock.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlockAus.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/appsSection.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/content/linkTo.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/paperPrices.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/pages/subscriptions-landing/components/subscriptionsProduct.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/components/stage.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/content/benefitsContainer.tsx",
                "message": "Module '\"react\"' has no exported member 'Node'."
            }
        ]
    },
    "TS2322": {
        "count": 443,
        "instances": [
            {
                "path": "assets-ts/components/asyncronously/asyncronously.ts",
                "message": "Type 'ComponentType<any>' is not assignable to type 'null'."
            },
            {
                "path": "assets-ts/components/asyncronously/asyncronously.ts",
                "message": "Type 'ComponentClass<any, any>' is not assignable to type 'null'."
            },
            {
                "path": "assets-ts/components/blockLabel/blockLabel.tsx",
                "message": "Type '{ children: any; css: (string | SerializedStyles | string[] | undefined)[]; }' is not assignable to type 'IntrinsicAttributes'."
            },
            {
                "path": "assets-ts/components/blockLabel/blockLabel.tsx",
                "message": "Property 'children' does not exist on type 'IntrinsicAttributes'."
            },
            {
                "path": "assets-ts/components/checkoutForm/checkoutForm.tsx",
                "message": "Type 'Option<string> | undefined' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/checkoutForm/checkoutForm.tsx",
                "message": "Type 'null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/containers/fullWidthContainer.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/containers/fullWidthContainer.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/containers/fullWidthContainer.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/containers/fullWidthContainer.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/content/content.tsx",
                "message": "Type 'Option<string> | undefined' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/content/contentSimple.tsx",
                "message": "Type 'Option<string> | undefined' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/countryGroupSwitcher/countryGroupSwitcher.tsx",
                "message": "Type '{ children: (Element | Element[])[]; style: { top: number; left: number; position: string; }; }' is not assignable to type 'IntrinsicAttributes & { children: any; }'."
            },
            {
                "path": "assets-ts/components/countryGroupSwitcher/countryGroupSwitcher.tsx",
                "message": "Property 'style' does not exist on type 'IntrinsicAttributes & { children: any; }'."
            },
            {
                "path": "assets-ts/components/countryGroupSwitcher/countryGroupSwitcher.tsx",
                "message": "Type '{ children: string[]; href: string; onClick: () => void; isSelected: boolean; }' is not assignable to type 'IntrinsicAttributes & itemProps & { href: string; }'."
            },
            {
                "path": "assets-ts/components/countryGroupSwitcher/countryGroupSwitcher.tsx",
                "message": "Property 'onClick' does not exist on type 'IntrinsicAttributes & itemProps & { href: string; }'."
            },
            {
                "path": "assets-ts/components/datePicker/datePickerHelpers.test.ts",
                "message": "Type 'typeof MockDate' is not assignable to type 'DateConstructor'."
            },
            {
                "path": "assets-ts/components/datePicker/datePickerHelpers.test.ts",
                "message": "Type 'typeof MockDate' provides no match for the signature '(): string'."
            },
            {
                "path": "assets-ts/components/dialog/dialog.tsx",
                "message": "Type 'string' is not assignable to type 'number | undefined'."
            },
            {
                "path": "assets-ts/components/dialog/dialog.tsx",
                "message": "Type 'string' is not assignable to type 'number | undefined'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitForm/directDebitForm.tsx",
                "message": "Type 'string' is not assignable to type 'number | undefined'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitForm/directDebitForm.tsx",
                "message": "Type 'string' is not assignable to type 'number | undefined'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitForm/directDebitForm.tsx",
                "message": "Type 'string' is not assignable to type 'number | undefined'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitPopUpForm/directDebitPopUpForm.tsx",
                "message": "Type 'Element' is not assignable to type 'null'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/components/form.tsx",
                "message": "Type 'string' is not assignable to type 'number | undefined'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/components/form.tsx",
                "message": "Type '{ id: string; label: string; autoComplete: string; type: string; inputmode: string; pattern: string; value: string; onChange: (e: ChangeEvent<HTMLInputElement>) => void; error: string; minLength: number; maxLength: number; width: 10; }' is not assignable to type 'IntrinsicAttributes & Pick<TextInputProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | ... 280 more ... | \"src\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/components/form.tsx",
                "message": "Property 'inputmode' does not exist on type 'IntrinsicAttributes & Pick<TextInputProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | ... 280 more ... | \"src\"> & Partial<...> & Partial<...>'. Did you mean 'inputMode'?"
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/components/form.tsx",
                "message": "Type '{ id: string; value: string; autoComplete: string; onChange: (e: ChangeEvent<HTMLInputElement>) => void; minLength: number; maxLength: number; type: string; inputmode: string; pattern: string; label: string; error: string; }' is not assignable to type 'IntrinsicAttributes & Pick<TextInputProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | ... 280 more ... | \"src\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/components/form.tsx",
                "message": "Property 'inputmode' does not exist on type 'IntrinsicAttributes & Pick<TextInputProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | ... 280 more ... | \"src\"> & Partial<...> & Partial<...>'. Did you mean 'inputMode'?"
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/components/form.tsx",
                "message": "Type 'string' is not assignable to type 'boolean | undefined'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/components/form.tsx",
                "message": "Type 'EventHandler' is not assignable to type 'MouseEventHandler<HTMLButtonElement>'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/components/form.tsx",
                "message": "Types of parameters 'e' and 'event' are incompatible."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/components/form.tsx",
                "message": "Type 'MouseEvent<HTMLButtonElement, MouseEvent>' is not assignable to type 'SyntheticEvent<HTMLInputElement, Event>'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/components/form.tsx",
                "message": "Types of property 'currentTarget' are incompatible."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/components/form.tsx",
                "message": "Type 'EventTarget & HTMLButtonElement' is not assignable to type 'EventTarget & HTMLInputElement'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/components/form.tsx",
                "message": "Type 'EventTarget & HTMLButtonElement' is missing the following properties from type 'HTMLInputElement': accept, align, alt, autocomplete, and 32 more."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/directDebitForm.tsx",
                "message": "Type 'any' is not assignable to type 'never'."
            },
            {
                "path": "assets-ts/components/forms/customFields/error.tsx",
                "message": "Type 'string | null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/forms/customFields/error.tsx",
                "message": "Type 'null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/forms/label.tsx",
                "message": "Type 'Option<string>' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/forms/label.tsx",
                "message": "Type 'null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/headers/links/links.tsx",
                "message": "Type 'string | null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/headers/mobileMenu/mobileMenu.tsx",
                "message": "Type '{ width: number; } | null | undefined' is not assignable to type 'CSSProperties | undefined'."
            },
            {
                "path": "assets-ts/components/headers/mobileMenu/mobileMenu.tsx",
                "message": "Type 'null' is not assignable to type 'CSSProperties | undefined'."
            },
            {
                "path": "assets-ts/components/headers/veggieBurgerButton/veggieBurgerButton.tsx",
                "message": "Type '{ children: any[]; 'aria-haspopup': Option<string>; onClick: Option<(...args: any[]) => any>; style: Option<{}>; className: string; ref: Option<(...args: any[]) => any>; }' is not assignable to type 'DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>'."
            },
            {
                "path": "assets-ts/components/headers/veggieBurgerButton/veggieBurgerButton.tsx",
                "message": "Type '{ children: any[]; 'aria-haspopup': Option<string>; onClick: Option<(...args: any[]) => any>; style: Option<{}>; className: string; ref: Option<(...args: any[]) => any>; }' is not assignable to type 'ButtonHTMLAttributes<HTMLButtonElement>'."
            },
            {
                "path": "assets-ts/components/headers/veggieBurgerButton/veggieBurgerButton.tsx",
                "message": "Types of property 'style' are incompatible."
            },
            {
                "path": "assets-ts/components/headers/veggieBurgerButton/veggieBurgerButton.tsx",
                "message": "Type 'Option<{}>' is not assignable to type 'CSSProperties | undefined'."
            },
            {
                "path": "assets-ts/components/headers/veggieBurgerButton/veggieBurgerButton.tsx",
                "message": "Type 'null' is not assignable to type 'CSSProperties | undefined'."
            },
            {
                "path": "assets-ts/components/list/list.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/list/list.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/list/list.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/list/list.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/marketingConsent/marketingConsent.tsx",
                "message": "Type '{ children: string; appearance: \"green\"; iconSide: \"right\"; \"aria-label\": string; onClick: () => void; icon: Element; }' is not assignable to type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\"> & Partial<Pick<PropTypes, \"appearance\" | ... 5 more ... | \"type\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/marketingConsent/marketingConsent.tsx",
                "message": "Property 'onClick' does not exist on type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\"> & Partial<Pick<PropTypes, \"appearance\" | ... 5 more ... | \"type\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/menu/menu.tsx",
                "message": "Type '{ children: any[]; className: any; \"data-is-selected\": boolean; }' is not assignable to type 'IntrinsicAttributes'."
            },
            {
                "path": "assets-ts/components/menu/menu.tsx",
                "message": "Property 'children' does not exist on type 'IntrinsicAttributes'."
            },
            {
                "path": "assets-ts/components/orderSummary/orderSummaryProduct.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/page/hero.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/page/hero.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/page/heroRoundel.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/page/heroRoundel.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/page/heroStyles.ts",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/page/page.tsx",
                "message": "Type 'string | null | undefined' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/page/page.tsx",
                "message": "Type 'null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/page/pageTitle.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/page/pageTitle.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/page/pageTitle.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/page/pageTitle.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/components/priceLabel/priceLabel.tsx",
                "message": "Type 'false | Record<string, any> | undefined' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/priceLabel/priceLabel.tsx",
                "message": "Type 'false' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/components/product/productOption.tsx",
                "message": "Type 'boolean | Dispatch<SetStateAction<HTMLElement | null>>' is not assignable to type 'LegacyRef<HTMLDivElement> | undefined'."
            },
            {
                "path": "assets-ts/components/product/productOption.tsx",
                "message": "Type 'false' is not assignable to type 'LegacyRef<HTMLDivElement> | undefined'."
            },
            {
                "path": "assets-ts/components/radioToggle/radioToggle.tsx",
                "message": "Type 'string' is not assignable to type 'number | undefined'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFields.tsx",
                "message": "Type 'ReactNode' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFields.tsx",
                "message": "Type 'undefined' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFields.tsx",
                "message": "Type '{ css: SerializedStyles; id: string; label: string; type: string; maxlength: number; value: any; onChange: (e: ChangeEvent<HTMLInputElement>) => any; error: any; }' is not assignable to type 'IntrinsicAttributes & Pick<TextInputProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | ... 280 more ... | \"src\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFields.tsx",
                "message": "Property 'maxlength' does not exist on type 'IntrinsicAttributes & Pick<TextInputProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | ... 280 more ... | \"src\"> & Partial<...> & Partial<...>'. Did you mean 'maxLength'?"
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type 'unknown' is not assignable to type 'string[]'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type 'FormError<\"city\">' is not assignable to type 'FormError<\"lineOne\">'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type '\"city\"' is not assignable to type '\"lineOne\"'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type 'FormError<\"postCode\">' is not assignable to type 'FormError<\"lineOne\">'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type '\"postCode\"' is not assignable to type '\"lineOne\"'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type 'FormError<\"postCode\">' is not assignable to type 'FormError<\"lineOne\">'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type 'FormError<\"country\">' is not assignable to type 'FormError<\"lineOne\">'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type '\"country\"' is not assignable to type '\"lineOne\"'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type 'FormError<\"state\">' is not assignable to type 'FormError<\"lineOne\">'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type '\"state\"' is not assignable to type '\"lineOne\"'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type 'FormError<\"state\">' is not assignable to type 'FormError<\"lineOne\">'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type 'FormError<string>[]' is not assignable to type 'FormError<keyof RegularPaymentRequestAddress>[]'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type 'FormError<string>' is not assignable to type 'FormError<keyof RegularPaymentRequestAddress>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Type 'string' is not assignable to type 'keyof RegularPaymentRequestAddress'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/postcodeFinder.tsx",
                "message": "Type 'null' is not assignable to type 'ReactElement<any, string | JSXElementConstructor<any>> | undefined'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/postcodeFinder.tsx",
                "message": "Type '{ children: any[]; onChange: (e: ChangeEvent<HTMLSelectElement>) => void; forwardRef: (r: any) => void; id: string; label: string; }' is not assignable to type 'IntrinsicAttributes & Pick<SelectProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"children\" | \"color\" | \"translate\" | \"hidden\" | \"size\" | ... 257 more ... | \"required\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/postcodeFinder.tsx",
                "message": "Property 'forwardRef' does not exist on type 'IntrinsicAttributes & Pick<SelectProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"children\" | \"color\" | \"translate\" | \"hidden\" | \"size\" | ... 257 more ... | \"required\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/postcodeFinder.tsx",
                "message": "Type 'null' is not assignable to type 'string | number | readonly string[] | undefined'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/billingPeriodSelector.tsx",
                "message": "Type '{ children: Element[]; legend: string; role: string; }' is not assignable to type 'IntrinsicAttributes & Pick<RadioGroupProps, \"label\" | \"children\" | \"className\" | \"cssOverrides\" | \"id\" | \"name\" | \"error\" | \"supporting\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/billingPeriodSelector.tsx",
                "message": "Property 'legend' does not exist on type 'IntrinsicAttributes & Pick<RadioGroupProps, \"label\" | \"children\" | \"className\" | \"cssOverrides\" | \"id\" | \"name\" | \"error\" | \"supporting\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/billingPeriodSelector.tsx",
                "message": "Type '{ label: string; value: string; supporting: string; offer: string; name: string; checked: boolean; onChange: () => Action; }' is not assignable to type 'IntrinsicAttributes & Pick<RadioProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | \"translate\" | ... 278 more ... | \"src\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/billingPeriodSelector.tsx",
                "message": "Property 'offer' does not exist on type 'IntrinsicAttributes & Pick<RadioProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | \"translate\" | ... 278 more ... | \"src\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/paymentMethodSelector.tsx",
                "message": "Type 'false | Element' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/paymentMethodSelector.tsx",
                "message": "Type 'boolean' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/personalDetails.tsx",
                "message": "Type 'null' is not assignable to type 'ReactElement<any, string | JSXElementConstructor<any>> | undefined'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/personalDetails.tsx",
                "message": "Type 'Option<string>' is not assignable to type 'string | number | readonly string[] | undefined'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/personalDetails.tsx",
                "message": "Type 'null' is not assignable to type 'string | number | readonly string[] | undefined'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.test.tsx",
                "message": "Type 'Promise<{ json: () => Promise<{ client_secret: string; }>; }>' is not assignable to type 'Promise<Response>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.test.tsx",
                "message": "Type '{ json: () => Promise<{ client_secret: string; }>; }' is missing the following properties from type 'Response': headers, ok, redirected, status, and 11 more."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Type 'string[]' is not assignable to type 'CardFieldName[]'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Type 'string' is not assignable to type 'CardFieldName'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Type 'string' is not assignable to type 'CardFieldsValidationOutput'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Type 'string' is not assignable to type 'CardFieldsValidationOutput'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/summary.tsx",
                "message": "Type '{ className: any; productPrice: ProductPrice; billingPeriod: BillingPeriod; }' is not assignable to type 'IntrinsicAttributes & Pick<PropTypes, \"billingPeriod\" | \"productPrice\"> & Partial<Pick<PropTypes, \"orderIsAGift\" | \"giftStyles\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/summary.tsx",
                "message": "Property 'className' does not exist on type 'IntrinsicAttributes & Pick<PropTypes, \"billingPeriod\" | \"productPrice\"> & Partial<Pick<PropTypes, \"orderIsAGift\" | \"giftStyles\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/summary.tsx",
                "message": "Type '{ className: any; productPrice: ProductPrice; billingPeriod: BillingPeriod; }' is not assignable to type 'IntrinsicAttributes & Pick<PropTypes, \"billingPeriod\" | \"productPrice\"> & Partial<Pick<PropTypes, \"orderIsAGift\" | \"giftStyles\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/summary.tsx",
                "message": "Property 'className' does not exist on type 'IntrinsicAttributes & Pick<PropTypes, \"billingPeriod\" | \"productPrice\"> & Partial<Pick<PropTypes, \"orderIsAGift\" | \"giftStyles\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/summary.tsx",
                "message": "Type '{ className: any; productPrice: ProductPrice; billingPeriod: BillingPeriod; giftStyles: any; }' is not assignable to type 'IntrinsicAttributes & Pick<PropTypes, \"billingPeriod\" | \"productPrice\"> & Partial<Pick<PropTypes, \"orderIsAGift\" | \"giftStyles\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/summary.tsx",
                "message": "Property 'className' does not exist on type 'IntrinsicAttributes & Pick<PropTypes, \"billingPeriod\" | \"productPrice\"> & Partial<Pick<PropTypes, \"orderIsAGift\" | \"giftStyles\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/total/total.tsx",
                "message": "Type 'number | undefined' is not assignable to type 'number'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/total/total.tsx",
                "message": "Type 'undefined' is not assignable to type 'number'."
            },
            {
                "path": "assets-ts/components/subscriptionsProductDescription/subscriptionsProductDescription.tsx",
                "message": "Type '{ children: string; href: string; onClick: (...args: any[]) => any; appearance: \"primary\" | \"secondary\" | \"tertiary\" | \"tertiaryFeature\"; modifierClasses: string[]; }' is not assignable to type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\" | \"href\"> & Partial<Pick<PropTypes, \"appearance\" | \"icon\" | \"iconSide\" | \"modifierClasses\" | \"aria-label\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionsProductDescription/subscriptionsProductDescription.tsx",
                "message": "Property 'onClick' does not exist on type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\" | \"href\"> & Partial<Pick<PropTypes, \"appearance\" | \"icon\" | \"iconSide\" | \"modifierClasses\" | \"aria-label\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/components/svgs/amazonPayLogoDs.tsx",
                "message": "Type '{ children: Element[]; width: string; height: string; viewBox: string; fill: string; xmlns: string; className: string; preserveAspectRatio: string; \"aria-hidden\": \"true\"; focusable: \"false\"; title: string; }' is not assignable to type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/components/svgs/amazonPayLogoDs.tsx",
                "message": "Property 'title' does not exist on type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/components/svgs/directDebitSymbolDs.tsx",
                "message": "Type '{ children: Element[]; width: string; height: string; viewBox: string; fill: string; xmlns: string; className: string; preserveAspectRatio: string; \"aria-hidden\": \"true\"; focusable: \"false\"; title: string; }' is not assignable to type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/components/svgs/directDebitSymbolDs.tsx",
                "message": "Property 'title' does not exist on type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/components/svgs/downChevronDs.tsx",
                "message": "Type '{ children: Element; width: string; height: string; viewBox: string; fill: string; xmlns: string; \"aria-hidden\": \"true\"; focusable: \"false\"; title: string; }' is not assignable to type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/components/svgs/downChevronDs.tsx",
                "message": "Property 'title' does not exist on type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/components/svgs/gift.tsx",
                "message": "Type '{ children: Element; width: string; height: string; className: string; version: string; viewbox: string; \"aria-hidden\": \"true\"; focusable: \"false\"; }' is not assignable to type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/components/svgs/gift.tsx",
                "message": "Property 'viewbox' does not exist on type 'SVGProps<SVGSVGElement>'. Did you mean 'viewBox'?"
            },
            {
                "path": "assets-ts/components/svgs/newCreditCardDs.tsx",
                "message": "Type '{ children: Element; width: string; height: string; viewBox: string; fill: string; xmlns: string; className: string; preserveAspectRatio: string; title: string; \"aria-hidden\": \"true\"; focusable: \"false\"; }' is not assignable to type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/components/svgs/newCreditCardDs.tsx",
                "message": "Property 'title' does not exist on type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/components/svgs/paypalDs.tsx",
                "message": "Type '{ children: Element[]; width: string; height: string; viewBox: string; fill: string; xmlns: string; className: string; title: string; \"aria-hidden\": \"true\"; focusable: \"false\"; }' is not assignable to type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/components/svgs/paypalDs.tsx",
                "message": "Property 'title' does not exist on type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/components/svgs/questionMarkHintIcon.tsx",
                "message": "Type '{ children: Element[]; width: string; height: string; viewBox: string; fill: string; xmlns: string; preserveAspectRatio: string; \"aria-hidden\": \"true\"; focusable: \"false\"; title: string; description: string; }' is not assignable to type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/components/svgs/questionMarkHintIcon.tsx",
                "message": "Property 'title' does not exist on type 'SVGProps<SVGSVGElement>'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Type 'null' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/forms/deliveryCheck.ts",
                "message": "Type 'unknown' is not assignable to type 'string[]'."
            },
            {
                "path": "assets-ts/helpers/forms/formValidation.ts",
                "message": "Type 'string | null' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/forms/formValidation.ts",
                "message": "Type 'null' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Type '(value: void | PromiseLike<void>) => void' is not assignable to type '(this: GlobalEventHandlers, ev: Event) => any'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Types of parameters 'value' and 'ev' are incompatible."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Type 'Event' is not assignable to type 'void | PromiseLike<void>'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Property 'then' is missing in type 'Event' but required in type 'PromiseLike<void>'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type '(json: Record<string, any>) => Promise<{ paymentStatus: \"success\"; } | { paymentStatus: string; error: any; } | { paymentStatus: string; subscriptionCreationPending: boolean; }>' is not assignable to type '(arg0: Record<string, any>) => Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type 'Promise<{ paymentStatus: \"success\"; } | { paymentStatus: string; error: any; } | { paymentStatus: string; subscriptionCreationPending: boolean; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type '{ paymentStatus: \"success\"; } | { paymentStatus: string; error: any; } | { paymentStatus: string; subscriptionCreationPending: boolean; }' is not assignable to type 'PaymentResult'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type '{ paymentStatus: string; error: any; }' is not assignable to type 'PaymentResult'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type '{ paymentStatus: string; error: any; }' is not assignable to type '{ paymentStatus: \"failure\"; error: ErrorReason; }'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Types of property 'paymentStatus' are incompatible."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type 'string' is not assignable to type '\"failure\"'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type 'Promise<Response | { paymentStatus: \"failure\"; error: \"unknown\"; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type 'Response | { paymentStatus: \"failure\"; error: \"unknown\"; }' is not assignable to type 'PaymentResult'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type 'Response' is not assignable to type 'PaymentResult'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type 'Response' is missing the following properties from type '{ paymentStatus: \"failure\"; error: ErrorReason; }': paymentStatus, error"
            },
            {
                "path": "assets-ts/helpers/forms/recaptcha.ts",
                "message": "Type '(value: void | PromiseLike<void>) => void' is not assignable to type '(this: GlobalEventHandlers, ev: Event) => any'."
            },
            {
                "path": "assets-ts/helpers/globalsAndSwitches/globals.ts",
                "message": "Type 'unknown' is not assignable to type 'Settings'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/country.ts",
                "message": "Type 'string | undefined' is not assignable to type 'null'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/country.ts",
                "message": "Type 'undefined' is not assignable to type 'null'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/country.ts",
                "message": "Type 'string' is not assignable to type 'null'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/country.ts",
                "message": "Type 'null' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/countryGroup.ts",
                "message": "Type 'string | null' is not assignable to type 'CountryGroupId | null | undefined'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/countryGroup.ts",
                "message": "Type 'string' is not assignable to type 'CountryGroupId | null | undefined'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/countryGroup.ts",
                "message": "Type 'string | undefined' is not assignable to type 'CountryGroupId | null | undefined'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/countryGroup.ts",
                "message": "Type 'string' is not assignable to type 'CountryGroupId | null | undefined'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/localCurrencyCountry.ts",
                "message": "Type 'string | null | undefined' is not assignable to type 'string | number | symbol'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/localCurrencyCountry.ts",
                "message": "Type 'undefined' is not assignable to type 'string | number | symbol'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/productPricesTests.ts",
                "message": "Type 'null' is not assignable to type 'number | undefined'."
            },
            {
                "path": "assets-ts/helpers/productPrice/productPrices.ts",
                "message": "Type '{ price: number | undefined; savingVsRetail?: number | undefined; currency: IsoCurrency; fixedTerm: boolean; promotions?: Promotion[] | undefined; }' is not assignable to type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/productPrices.ts",
                "message": "Types of property 'price' are incompatible."
            },
            {
                "path": "assets-ts/helpers/productPrice/productPrices.ts",
                "message": "Type 'number | undefined' is not assignable to type 'number'."
            },
            {
                "path": "assets-ts/helpers/productPrice/productPrices.ts",
                "message": "Type 'undefined' is not assignable to type 'number'."
            },
            {
                "path": "assets-ts/helpers/productPrice/promotions.tsx",
                "message": "Type '{ css: string; dangerouslySetInnerHTML: { __html: string; }; }' is not assignable to type 'IntrinsicAttributes'."
            },
            {
                "path": "assets-ts/helpers/productPrice/promotions.tsx",
                "message": "Property 'dangerouslySetInnerHTML' does not exist on type 'IntrinsicAttributes'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/formReducer.ts",
                "message": "Type '{ stage: string; product: SubscriptionProduct; title: null; email: string; firstName: string; lastName: string; startDate: Option<string>; telephone: null; billingAddressIsSame: boolean; ... 19 more ...; giftDeliveryDate: null; }' is not assignable to type 'FormState'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/formReducer.ts",
                "message": "Type '{ stage: string; product: SubscriptionProduct; title: null; email: string; firstName: string; lastName: string; startDate: Option<string>; telephone: null; billingAddressIsSame: boolean; ... 19 more ...; giftDeliveryDate: null; }' is not assignable to type '{ stage: Stage; product: SubscriptionProduct; email: string; formErrors: FormError<FormField>[]; submissionError: Option<ErrorReason>; ... 5 more ...; debugInfo: string; }'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/formReducer.ts",
                "message": "Types of property 'stage' are incompatible."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/formReducer.ts",
                "message": "Type 'string' is not assignable to type 'Stage'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/rules.ts",
                "message": "Type 'FormError<string>[]' is not assignable to type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/rules.ts",
                "message": "Type 'FormError<string>' is not assignable to type 'FormError<FormField>'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/rules.ts",
                "message": "Type 'string' is not assignable to type 'FormField'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/rules.ts",
                "message": "Type 'FormError<string>[]' is not assignable to type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/thirdPartyTrackingConsentTest.ts",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/thirdPartyTrackingConsentTest.ts",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/thirdPartyTrackingConsentTest.ts",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/thirdPartyTrackingConsentTest.ts",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/thirdPartyTrackingConsentTest.ts",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/thirdPartyTrackingConsentTest.ts",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/thirdPartyTrackingConsentTest.ts",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/thirdPartyTrackingConsentTest.ts",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/thirdPartyTrackingConsentTest.ts",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/thirdPartyTrackingConsentTest.ts",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/thirdPartyTrackingConsentTest.ts",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/thirdPartyTrackingConsentTest.ts",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/acquisitions.ts",
                "message": "Type 'string' is not assignable to type 'never'."
            },
            {
                "path": "assets-ts/helpers/tracking/acquisitions.ts",
                "message": "Type 'string' is not assignable to type 'never'."
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type '{ DigitalPack: string; DigitalPackGift: string; Paper: string; PaperAndDigital: string; GuardianWeekly: string; GuardianWeeklyGift: string; }' is not assignable to type 'SubsUrls'."
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Object literal may only specify known properties, and 'DigitalPack' does not exist in type 'SubsUrls'."
            },
            {
                "path": "assets-ts/helpers/urls/url.ts",
                "message": "Type 'string[][]' is not assignable to type '[string, string][]'."
            },
            {
                "path": "assets-ts/helpers/urls/url.ts",
                "message": "Type 'string[]' is not assignable to type '[string, string]'."
            },
            {
                "path": "assets-ts/helpers/urls/url.ts",
                "message": "Target requires 2 element(s) but source may have fewer."
            },
            {
                "path": "assets-ts/helpers/utilities/utilities.ts",
                "message": "Type 'string | null | undefined' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/utilities/utilities.ts",
                "message": "Type 'undefined' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/hocs/canShow.tsx",
                "message": "Type 'Omit<AugmentedProps<Props>, \"isShown\">' is not assignable to type 'IntrinsicAttributes & Props & { children?: ReactNode; }'."
            },
            {
                "path": "assets-ts/hocs/canShow.tsx",
                "message": "Type 'Omit<AugmentedProps<Props>, \"isShown\">' is not assignable to type 'Props'."
            },
            {
                "path": "assets-ts/hocs/canShow.tsx",
                "message": "'Props' could be instantiated with an arbitrary type which could be unrelated to 'Omit<AugmentedProps<Props>, \"isShown\">'."
            },
            {
                "path": "assets-ts/hocs/withError.tsx",
                "message": "Type 'Omit<AugmentedProps<Props>, \"error\">' is not assignable to type 'IntrinsicAttributes & Props & { children?: ReactNode; }'."
            },
            {
                "path": "assets-ts/hocs/withError.tsx",
                "message": "Type 'Omit<AugmentedProps<Props>, \"error\">' is not assignable to type 'Props'."
            },
            {
                "path": "assets-ts/hocs/withError.tsx",
                "message": "'Props' could be instantiated with an arbitrary type which could be unrelated to 'Omit<AugmentedProps<Props>, \"error\">'."
            },
            {
                "path": "assets-ts/hocs/withLabel.tsx",
                "message": "Type 'Omit<AugmentedProps<Props>, \"footer\" | \"label\" | \"optional\">' is not assignable to type 'IntrinsicAttributes & Props & { children?: ReactNode; }'."
            },
            {
                "path": "assets-ts/hocs/withLabel.tsx",
                "message": "Type 'Omit<AugmentedProps<Props>, \"footer\" | \"label\" | \"optional\">' is not assignable to type 'Props'."
            },
            {
                "path": "assets-ts/hocs/withLabel.tsx",
                "message": "'Omit<AugmentedProps<Props>, \"footer\" | \"label\" | \"optional\">' is assignable to the constraint of type 'Props', but 'Props' could be instantiated with a different subtype of constraint '{ id: Option<string>; }'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/map.tsx",
                "message": "Type '(() => void) | null' is not assignable to type 'MouseEventHandler<SVGGElement> | undefined'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/map.tsx",
                "message": "Type 'null' is not assignable to type 'MouseEventHandler<SVGGElement> | undefined'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Type 'string | null' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Type 'null' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/AmazonPay/AmazonPayLoginButton.tsx",
                "message": "Type '{ children: string; type: \"button\"; onClick: () => void; \"aria-label\": string; }' is not assignable to type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\"> & Partial<Pick<PropTypes, \"appearance\" | ... 5 more ... | \"type\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/AmazonPay/AmazonPayLoginButton.tsx",
                "message": "Property 'onClick' does not exist on type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\"> & Partial<Pick<PropTypes, \"appearance\" | ... 5 more ... | \"type\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionAmount.tsx",
                "message": "Type 'string | null' is not assignable to type 'string | number | readonly string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionAmount.tsx",
                "message": "Type 'string | null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionAmountChoices.tsx",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionAmountChoices.tsx",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionForm.tsx",
                "message": "Type '(arg0: Event) => void' is not assignable to type 'FormEventHandler<HTMLFormElement>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionForm.tsx",
                "message": "Types of parameters 'arg0' and 'event' are incompatible."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionForm.tsx",
                "message": "Type 'FormEvent<HTMLFormElement>' is missing the following properties from type 'Event': cancelBubble, composed, returnValue, srcElement, and 7 more."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionForm.tsx",
                "message": "Type 'string' is not assignable to type 'SerializedStyles | SerializedStyles[] | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Type '(arg0: Event) => void' is not assignable to type 'FormEventHandler<HTMLInputElement>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Types of parameters 'arg0' and 'event' are incompatible."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Type 'FormEvent<HTMLInputElement>' is missing the following properties from type 'Event': cancelBubble, composed, returnValue, srcElement, and 7 more."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Type '(arg0: Event) => void' is not assignable to type 'ChangeEventHandler<HTMLInputElement>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Types of parameters 'arg0' and 'event' are incompatible."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Type 'ChangeEvent<HTMLInputElement>' is not assignable to type 'Event'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Type 'string | null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Type '(arg0: Event) => void' is not assignable to type 'FormEventHandler<HTMLInputElement>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Types of parameters 'arg0' and 'event' are incompatible."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Type 'FormEvent<HTMLInputElement>' is not assignable to type 'Event'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Type 'string | null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Type '(arg0: Event) => void' is not assignable to type 'FormEventHandler<HTMLInputElement>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Types of parameters 'arg0' and 'event' are incompatible."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Type 'FormEvent<HTMLInputElement>' is not assignable to type 'Event'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormFields.tsx",
                "message": "Type 'string | null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionState.tsx",
                "message": "Type 'false | ((arg0: Event) => void)' is not assignable to type 'ChangeEventHandler<HTMLSelectElement> | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionState.tsx",
                "message": "Type 'false' is not assignable to type 'ChangeEventHandler<HTMLSelectElement> | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type 'string | null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type 'void | ((arg0: Event) => void)' is not assignable to type 'FormEventHandler<HTMLInputElement> | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type 'void' is not assignable to type 'FormEventHandler<HTMLInputElement> | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type '((arg0: Event) => void) | undefined' is not assignable to type 'ChangeEventHandler<HTMLInputElement> | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type '(arg0: Event) => void' is not assignable to type 'ChangeEventHandler<HTMLInputElement>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Types of parameters 'arg0' and 'event' are incompatible."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type 'ChangeEvent<HTMLInputElement>' is missing the following properties from type 'Event': cancelBubble, composed, returnValue, srcElement, and 7 more."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type 'string | null' is not assignable to type 'string | number | readonly string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type 'null' is not assignable to type 'string | number | readonly string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type 'number | void' is not assignable to type 'string | number | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type 'void' is not assignable to type 'string | number | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type 'number | void' is not assignable to type 'string | number | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type 'string | void' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type 'void' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTextInput.tsx",
                "message": "Type 'number | void' is not assignable to type 'string | number | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYou.tsx",
                "message": "Type 'boolean | null' is not assignable to type 'boolean'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYou.tsx",
                "message": "Type 'null' is not assignable to type 'boolean'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYouMarketingConsent.tsx",
                "message": "Type 'string | null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYouSignUp.tsx",
                "message": "Type '(arg0: Event) => void' is not assignable to type 'ChangeEventHandler<HTMLInputElement>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYouSignUp.tsx",
                "message": "Types of parameters 'arg0' and 'event' are incompatible."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYouSignUp.tsx",
                "message": "Type 'ChangeEvent<HTMLInputElement>' is not assignable to type 'Event'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYouSupportReminder.tsx",
                "message": "Type 'number' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTypeTabs.tsx",
                "message": "Type '{ children: Element[]; name: string; orientation: string; }' is not assignable to type 'IntrinsicAttributes & ChoiceCardGroupProps'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTypeTabs.tsx",
                "message": "Property 'orientation' does not exist on type 'IntrinsicAttributes & ChoiceCardGroupProps'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type 'false | \"Please select a payment method\"' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type 'false' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type 'false | Element' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type 'boolean' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type 'false | Element[]' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type 'boolean' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type 'RecentlySignedInExistingPaymentMethod' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type '{ '& + span': { display: string; width: string; margin: number; justifyContent: string; }; '& + span svg': { width: string; height: string; }; '&:not(:checked) + span svg': { filter: string; }; }' is not assignable to type 'SerializedStyles | SerializedStyles[] | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type '{ '& + span': { display: string; width: string; margin: number; justifyContent: string; }; '& + span svg': { width: string; height: string; }; '&:not(:checked) + span svg': { filter: string; }; }' is missing the following properties from type 'SerializedStyles[]': length, pop, push, concat, and 28 more."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type 'Element[]' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type '{ '& + span': { display: string; width: string; margin: number; justifyContent: string; }; '& + span svg': { width: string; height: string; }; '&:not(:checked) + span svg': { filter: string; }; }' is not assignable to type 'SerializedStyles | SerializedStyles[] | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type '{ '& + span': { display: string; width: string; margin: number; justifyContent: string; }; '& + span svg': { width: string; height: string; }; '&:not(:checked) + span svg': { filter: string; }; }' is not assignable to type 'SerializedStyles[]'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type 'false | Element | undefined' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Type 'undefined' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/SetPasswordForm.tsx",
                "message": "Type '(arg0: Event) => void' is not assignable to type 'FormEventHandler<HTMLFormElement>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/SetPasswordForm.tsx",
                "message": "Types of parameters 'arg0' and 'event' are incompatible."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/SetPasswordForm.tsx",
                "message": "Type 'FormEvent<HTMLFormElement>' is not assignable to type 'Event'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/SetPasswordForm.tsx",
                "message": "Type '{ children: string; appearance: \"greyHollow\"; \"aria-label\": string; onClick: () => void; }' is not assignable to type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\"> & Partial<Pick<PropTypes, \"appearance\" | ... 5 more ... | \"type\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/SetPasswordForm.tsx",
                "message": "Property 'onClick' does not exist on type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\"> & Partial<Pick<PropTypes, \"appearance\" | ... 5 more ... | \"type\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Type 'StripeCardNumberElement | null' is not assignable to type 'StripeCardNumberElement | StripeCardElement | { token: string; }'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Type 'null' is not assignable to type 'StripeCardNumberElement | StripeCardElement | { token: string; }'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Type '{ base: { fontFamily: string; '::placeholder': { color: string; }; fontSize: string; lineHeight: number; }; }' is not assignable to type 'StripeElementStyle'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "The types of 'base.lineHeight' are incompatible between these types."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Type 'number' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Type 'void' is not assignable to type '(() => any) | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Type '{ base: { fontFamily: string; '::placeholder': { color: string; }; fontSize: string; lineHeight: number; }; }' is not assignable to type 'StripeElementStyle'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Type 'void' is not assignable to type '(() => any) | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Type '{ base: { fontFamily: string; '::placeholder': { color: string; }; fontSize: string; lineHeight: number; }; }' is not assignable to type 'StripeElementStyle'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Type 'void' is not assignable to type '(() => any) | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Type 'string | null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type '{ flowPrefix: \"npf\"; form: Record<string, any> | null; isSignedIn: boolean; isRecurringContributor: boolean; setFormIsValid: (isValid: boolean) => any; setCheckoutFormHasBeenSubmitted: () => any; ... 21 more ...; oneOffRecaptchaToken: string | null; }' is not assignable to type 'FormSubmitParameters'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Object literal may only specify known properties, and 'isRecurringContributor' does not exist in type 'FormSubmitParameters'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type '() => Promise<{ paymentStatus: string; error: string; }>' is not assignable to type '(arg0: any, arg1: State, arg2: PaymentAuthorisation) => Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type 'Promise<{ paymentStatus: string; error: string; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type '{ paymentStatus: string; error: string; }' is not assignable to type 'PaymentResult'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type '{ paymentStatus: string; error: string; }' is not assignable to type '{ paymentStatus: \"failure\"; error: ErrorReason; }'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Types of property 'paymentStatus' are incompatible."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type 'string' is not assignable to type '\"failure\"'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type 'Promise<{ paymentStatus: string; error: string; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type 'Promise<{ paymentStatus: string; error: string; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type 'Promise<{ paymentStatus: string; error: string; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type '() => Promise<{ paymentStatus: string; error: string; }>' is not assignable to type '(arg0: any, arg1: State, arg2: PaymentAuthorisation) => Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type 'Promise<{ paymentStatus: string; error: string; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type '() => Promise<{ paymentStatus: string; error: string; }>' is not assignable to type '(arg0: any, arg1: State, arg2: PaymentAuthorisation) => Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type 'Promise<{ paymentStatus: string; error: string; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type '() => Promise<{ paymentStatus: string; error: string; }>' is not assignable to type '(arg0: any, arg1: State, arg2: PaymentAuthorisation) => Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type 'Promise<{ paymentStatus: string; error: string; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type 'Promise<{ paymentStatus: string; error: string; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type '() => Promise<{ paymentStatus: string; error: string; }>' is not assignable to type '(arg0: any, arg1: State, arg2: PaymentAuthorisation) => Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type 'Promise<{ paymentStatus: string; error: string; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type '() => Promise<{ paymentStatus: string; error: string; }>' is not assignable to type '(arg0: any, arg1: State, arg2: PaymentAuthorisation) => Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type 'Promise<{ paymentStatus: string; error: string; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type '() => Promise<{ paymentStatus: string; error: string; }>' is not assignable to type '(arg0: any, arg1: State, arg2: PaymentAuthorisation) => Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type 'Promise<{ paymentStatus: string; error: string; }>' is not assignable to type 'Promise<PaymentResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingReducer.ts",
                "message": "Type '{ Stripe: null; AmazonPay: null; }' is not assignable to type '{ Stripe: StripeHandler | null; }'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingReducer.ts",
                "message": "Object literal may only specify known properties, and 'AmazonPay' does not exist in type '{ Stripe: StripeHandler | null; }'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingReducer.ts",
                "message": "Type '{ hasBegunLoading: false; amazonPayLibrary: { amazonLoginObject: null; amazonPaymentsObject: null; }; loginButtonReady: false; walletIsStale: false; orderReferenceId: null; paymentSelected: false; hasAccessToken: false; fatalError: false; amazonBillingAgreementConsentStatus: false; }' is not assignable to type 'AmazonPayData'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingReducer.ts",
                "message": "Object literal may only specify known properties, and 'loginButtonReady' does not exist in type 'AmazonPayData'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingReducer.ts",
                "message": "Type '{ contributionType: keyof RegularContributionTypeMap<null> | \"ONE_OFF\"; showOtherAmount: boolean; formData: { firstName: string | null; lastName: string | null; ... 4 more ...; checkoutFormHasBeenSubmitted: boolean; }; ... 19 more ...; oneOffRecaptchaToken: string | null; }' is not assignable to type 'FormState'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingReducer.ts",
                "message": "Object literal may only specify known properties, and 'showOtherAmount' does not exist in type 'FormState'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutForm.tsx",
                "message": "Type '{ image: Element; title: string; description: string; productPrice: ProductPrice; billingPeriod: \"Annual\" | \"Monthly\"; changeSubscription: string; }' is not assignable to type 'IntrinsicAttributes & Pick<PropTypes, \"title\" | \"image\" | \"billingPeriod\" | \"productPrice\"> & Partial<Pick<PropTypes, \"orderIsAGift\" | \"changeSubscription\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutForm.tsx",
                "message": "Property 'description' does not exist on type 'IntrinsicAttributes & Pick<PropTypes, \"title\" | \"image\" | \"billingPeriod\" | \"productPrice\"> & Partial<Pick<PropTypes, \"orderIsAGift\" | \"changeSubscription\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutForm.tsx",
                "message": "Type '{ children: (Element | null)[]; onSubmit: (ev: any) => void; }' is not assignable to type 'IntrinsicAttributes & FormPropTypes'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutForm.tsx",
                "message": "Property 'onSubmit' does not exist on type 'IntrinsicAttributes & FormPropTypes'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutForm.tsx",
                "message": "Type 'Record<string, any>[]' is not assignable to type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutForm.tsx",
                "message": "Type 'Record<string, any>[]' is not assignable to type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutForm.tsx",
                "message": "Type 'Record<string, any>' is missing the following properties from type 'FormError<FormField>': field, message"
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutFormGift.tsx",
                "message": "Type '{ image: Element; title: string; description: string; productPrice: ProductPrice; billingPeriod: \"Annual\" | \"Monthly\"; changeSubscription: string; orderIsAGift: true; }' is not assignable to type 'IntrinsicAttributes & Pick<PropTypes, \"title\" | \"image\" | \"billingPeriod\" | \"productPrice\"> & Partial<Pick<PropTypes, \"orderIsAGift\" | \"changeSubscription\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutFormGift.tsx",
                "message": "Property 'description' does not exist on type 'IntrinsicAttributes & Pick<PropTypes, \"title\" | \"image\" | \"billingPeriod\" | \"productPrice\"> & Partial<Pick<PropTypes, \"orderIsAGift\" | \"changeSubscription\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutFormGift.tsx",
                "message": "Type '{ children: (Element | null)[]; onSubmit: (ev: any) => void; }' is not assignable to type 'IntrinsicAttributes & FormPropTypes'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutFormGift.tsx",
                "message": "Property 'onSubmit' does not exist on type 'IntrinsicAttributes & FormPropTypes'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutFormGift.tsx",
                "message": "Type 'Option<string>' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutFormGift.tsx",
                "message": "Type 'Record<string, any>[]' is not assignable to type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutFormGift.tsx",
                "message": "Type 'Record<string, any>[]' is not assignable to type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/orderSummary/orderSummary.tsx",
                "message": "Type 'string | null | undefined' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/orderSummary/orderSummaryStyles.ts",
                "message": "Type '\"normal\"' is not assignable to type 'FontWeight | undefined'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/editorialVoice/editorialVoice.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/feedbackWidget/feedbackWidget.tsx",
                "message": "Type 'SerializedStyles | null' is not assignable to type 'SerializedStyles'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/feedbackWidget/feedbackWidget.tsx",
                "message": "Type 'null' is not assignable to type 'SerializedStyles'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/feedbackWidget/feedbackWidget.tsx",
                "message": "Type 'SerializedStyles | null' is not assignable to type 'SerializedStyles'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/feedbackWidget/feedbackWidget.tsx",
                "message": "Type 'null' is not assignable to type 'SerializedStyles'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/hero/heroWithPriceCards.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/hero/heroWithPriceCards.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string | string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/hero/heroWithPriceCards.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string[]'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/hero/heroWithPriceCards.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string | string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/hero/heroWithPriceCards.tsx",
                "message": "Type 'SerializedStyles' is missing the following properties from type 'string[]': length, pop, push, concat, and 27 more."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/paymentSelection.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/prices.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlock.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string | string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlock.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string[]'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlock.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlock.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlockAus.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string | string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlockAus.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string[]'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlockAus.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlockAus.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/digitalSubscriptionLanding.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/digitalSubscriptionLanding.tsx",
                "message": "Type 'boolean | Dispatch<SetStateAction<HTMLElement | null>>' is not assignable to type 'LegacyRef<HTMLDivElement> | undefined'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/digitalSubscriptionLanding.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/digitalSubscriptionLanding.tsx",
                "message": "Type 'boolean | Dispatch<SetStateAction<HTMLElement | null>>' is not assignable to type 'boolean'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/digitalSubscriptionLanding.tsx",
                "message": "Type 'Dispatch<SetStateAction<HTMLElement | null>>' is not assignable to type 'boolean'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/addDigiSubCta.tsx",
                "message": "Type 'string | SerializedStyles' is not assignable to type 'SerializedStyles'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/addDigiSubCta.tsx",
                "message": "Type 'string' is not assignable to type 'SerializedStyles'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/addDigiSubCta.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/appsSection.tsx",
                "message": "Type '\"normal\"' is not assignable to type 'LineHeight | undefined'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Type '{ children: Element; modifierClasses: string[]; }' is not assignable to type 'IntrinsicAttributes & { children: any; }'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Property 'modifierClasses' does not exist on type 'IntrinsicAttributes & { children: any; }'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Type '{ children: (Element | null)[]; onSubmit: (ev: any) => void; }' is not assignable to type 'IntrinsicAttributes & FormPropTypes'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Property 'onSubmit' does not exist on type 'IntrinsicAttributes & FormPropTypes'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Type 'Option<string>' is not assignable to type 'string | number | readonly string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Type 'Option<string>' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Type '{ children: Element[]; label: string; hideLabel: true; id: string; name: string; orienntation: string; error: any; }' is not assignable to type 'IntrinsicAttributes & Pick<RadioGroupProps, \"label\" | \"children\" | \"className\" | \"cssOverrides\" | \"id\" | \"name\" | \"error\" | \"supporting\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Property 'orienntation' does not exist on type 'IntrinsicAttributes & Pick<RadioGroupProps, \"label\" | \"children\" | \"className\" | \"cssOverrides\" | \"id\" | \"name\" | \"error\" | \"supporting\"> & Partial<...> & Partial<...>'. Did you mean 'orientation'?"
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Type '{ inputId: string; value: string; label: string; name: string; checked: boolean; onChange: () => Action; }' is not assignable to type 'IntrinsicAttributes & Pick<RadioProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | \"translate\" | ... 278 more ... | \"src\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Property 'inputId' does not exist on type 'IntrinsicAttributes & Pick<RadioProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | \"translate\" | ... 278 more ... | \"src\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Type '{ children: Element[]; label: string; hideLabel: true; id: string; error: any; legend: string; }' is not assignable to type 'IntrinsicAttributes & Pick<RadioGroupProps, \"label\" | \"children\" | \"className\" | \"cssOverrides\" | \"id\" | \"name\" | \"error\" | \"supporting\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Property 'legend' does not exist on type 'IntrinsicAttributes & Pick<RadioGroupProps, \"label\" | \"children\" | \"className\" | \"cssOverrides\" | \"id\" | \"name\" | \"error\" | \"supporting\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Type 'Record<string, any>[]' is not assignable to type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Type 'Record<string, any>[]' is not assignable to type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/helpers/options.ts",
                "message": "Type 'string | null | undefined' is not assignable to type 'PaperProductOptions'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/helpers/options.ts",
                "message": "Type 'undefined' is not assignable to type 'PaperProductOptions'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/content/deliveryTab.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/content/prices.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/content/prices.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/content/subsCardTab.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/hero/hero.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/hero/hero.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string | string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/hero/hero.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string[]'."
            },
            {
                "path": "assets-ts/pages/showcase/components/ctaContribute.tsx",
                "message": "Type '{ children: string; icon: Element; appearance: \"secondary\"; href: string; onClick: () => void; }' is not assignable to type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\" | \"href\"> & Partial<Pick<PropTypes, \"appearance\" | \"icon\" | \"iconSide\" | \"modifierClasses\" | \"aria-label\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/showcase/components/ctaContribute.tsx",
                "message": "Property 'onClick' does not exist on type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\" | \"href\"> & Partial<Pick<PropTypes, \"appearance\" | \"icon\" | \"iconSide\" | \"modifierClasses\" | \"aria-label\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/showcase/components/ctaSubscribe.tsx",
                "message": "Type '{ children: string; icon: Element; href: string; onClick: () => void; }' is not assignable to type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\" | \"href\"> & Partial<Pick<PropTypes, \"appearance\" | \"icon\" | \"iconSide\" | \"modifierClasses\" | \"aria-label\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/showcase/components/ctaSubscribe.tsx",
                "message": "Property 'onClick' does not exist on type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\" | \"href\"> & Partial<Pick<PropTypes, \"appearance\" | \"icon\" | \"iconSide\" | \"modifierClasses\" | \"aria-label\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/showcase/components/hero.tsx",
                "message": "Type 'Element' is not assignable to type 'String'."
            },
            {
                "path": "assets-ts/pages/showcase/components/otherProduct.tsx",
                "message": "Type '{ children: string; icon: Element; appearance: \"greyHollow\"; href: string; onClick: () => void; }' is not assignable to type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\" | \"href\"> & Partial<Pick<PropTypes, \"appearance\" | \"icon\" | \"iconSide\" | \"modifierClasses\" | \"aria-label\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/showcase/components/otherProduct.tsx",
                "message": "Property 'onClick' does not exist on type 'IntrinsicAttributes & Pick<PropTypes, \"children\" | \"getRef\" | \"postDeploymentTestID\" | \"href\"> & Partial<Pick<PropTypes, \"appearance\" | \"icon\" | \"iconSide\" | \"modifierClasses\" | \"aria-label\">> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/subscriptions-landing/components/subscriptionsProduct.tsx",
                "message": "Type 'Option<boolean> | undefined' is not assignable to type 'Option<boolean>'."
            },
            {
                "path": "assets-ts/pages/subscriptions-landing/components/subscriptionsProduct.tsx",
                "message": "Type 'undefined' is not assignable to type 'Option<boolean>'."
            },
            {
                "path": "assets-ts/pages/subscriptions-landing/copy/subscriptionCopy.tsx",
                "message": "Type '{ ctaButtonText: string; link: string; analyticsTracking: () => void; modifierClasses: string; }' is not assignable to type 'ProductButton'."
            },
            {
                "path": "assets-ts/pages/subscriptions-landing/copy/subscriptionCopy.tsx",
                "message": "Object literal may only specify known properties, and 'modifierClasses' does not exist in type 'ProductButton'."
            },
            {
                "path": "assets-ts/pages/subscriptions-landing/copy/subscriptionCopy.tsx",
                "message": "Type '{ ctaButtonText: string; link: string; analyticsTracking: () => void; modifierClasses: string; }' is not assignable to type 'ProductButton'."
            },
            {
                "path": "assets-ts/pages/subscriptions-landing/copy/subscriptionCopy.tsx",
                "message": "Object literal may only specify known properties, and 'modifierClasses' does not exist in type 'ProductButton'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/components/redemptionForm.tsx",
                "message": "Type '{ children: Element[]; onSubmit: (ev: any) => void; }' is not assignable to type 'IntrinsicAttributes & FormPropTypes'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/components/redemptionForm.tsx",
                "message": "Property 'onSubmit' does not exist on type 'IntrinsicAttributes & FormPropTypes'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/components/redemptionForm.tsx",
                "message": "Type 'Option<string>' is not assignable to type 'string | number | readonly string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/components/redemptionForm.tsx",
                "message": "Type 'string | null' is not assignable to type 'string | undefined'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/components/redemptionForm.tsx",
                "message": "Type '{ children: string; onClick: () => void; showIcon: true; iconSide: \"right\"; icon: Element; }' is not assignable to type 'IntrinsicAttributes & Pick<ButtonProps, \"form\" | \"slot\" | \"style\" | \"title\" | \"children\" | \"color\" | \"translate\" | \"hidden\" | \"icon\" | \"disabled\" | ... 257 more ... | \"nudgeIcon\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/components/redemptionForm.tsx",
                "message": "Property 'showIcon' does not exist on type 'IntrinsicAttributes & Pick<ButtonProps, \"form\" | \"slot\" | \"style\" | \"title\" | \"children\" | \"color\" | \"translate\" | \"hidden\" | \"icon\" | \"disabled\" | ... 257 more ... | \"nudgeIcon\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Type '{ children: Element; modifierClasses: string[]; }' is not assignable to type 'IntrinsicAttributes & { children: any; }'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Property 'modifierClasses' does not exist on type 'IntrinsicAttributes & { children: any; }'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Type '{ children: (Element | null)[]; onSubmit: (ev: any) => void; }' is not assignable to type 'IntrinsicAttributes & FormPropTypes'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Property 'onSubmit' does not exist on type 'IntrinsicAttributes & FormPropTypes'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Type 'Option<string>' is not assignable to type 'string | number | readonly string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Type '{ children: Element[]; label: string; hideLabel: true; id: string; name: string; orienntation: string; error: any; }' is not assignable to type 'IntrinsicAttributes & Pick<RadioGroupProps, \"label\" | \"children\" | \"className\" | \"cssOverrides\" | \"id\" | \"name\" | \"error\" | \"supporting\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Property 'orienntation' does not exist on type 'IntrinsicAttributes & Pick<RadioGroupProps, \"label\" | \"children\" | \"className\" | \"cssOverrides\" | \"id\" | \"name\" | \"error\" | \"supporting\"> & Partial<...> & Partial<...>'. Did you mean 'orientation'?"
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Type '{ inputId: string; value: string; label: string; name: string; checked: boolean; onChange: () => void; }' is not assignable to type 'IntrinsicAttributes & Pick<RadioProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | \"translate\" | ... 278 more ... | \"src\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Property 'inputId' does not exist on type 'IntrinsicAttributes & Pick<RadioProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | \"translate\" | ... 278 more ... | \"src\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Type '(Element | null)[]' is not assignable to type 'Element | Element[]'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Type '(Element | null)[]' is not assignable to type 'Element[]'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Type 'Element | null' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Type 'null' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Type 'Record<string, any>[]' is not assignable to type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Type 'Record<string, any>[]' is not assignable to type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Type '{ children: Element; modifierClasses: string[]; }' is not assignable to type 'IntrinsicAttributes & { children: any; }'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Property 'modifierClasses' does not exist on type 'IntrinsicAttributes & { children: any; }'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Type '{ children: (Element | null)[]; onSubmit: (ev: any) => void; }' is not assignable to type 'IntrinsicAttributes & FormPropTypes'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Property 'onSubmit' does not exist on type 'IntrinsicAttributes & FormPropTypes'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Type 'Option<string>' is not assignable to type 'string | number | readonly string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Type '(Element | null)[]' is not assignable to type 'Element | Element[]'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Type '(Element | null)[]' is not assignable to type 'Element[]'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Type 'Option<string>' is not assignable to type 'string | number | readonly string[] | undefined'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Type '{ children: Element[]; label: string; hideLabel: true; id: string; name: string; orienntation: string; error: any; }' is not assignable to type 'IntrinsicAttributes & Pick<RadioGroupProps, \"label\" | \"children\" | \"className\" | \"cssOverrides\" | \"id\" | \"name\" | \"error\" | \"supporting\"> & Partial<...> & Partial<...>'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Property 'orienntation' does not exist on type 'IntrinsicAttributes & Pick<RadioGroupProps, \"label\" | \"children\" | \"className\" | \"cssOverrides\" | \"id\" | \"name\" | \"error\" | \"supporting\"> & Partial<...> & Partial<...>'. Did you mean 'orientation'?"
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Type 'Record<string, any>[]' is not assignable to type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Type 'Record<string, any>[]' is not assignable to type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/content/benefitsContainer.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/content/prices.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/content/prices.tsx",
                "message": "Type 'SerializedStyles' is not assignable to type 'string'."
            }
        ]
    },
    "TS2345": {
        "count": 287,
        "instances": [
            {
                "path": "assets-ts/components/asyncronously/asyncronously.ts",
                "message": "Argument of type 'null' is not assignable to parameter of type 'ComponentType<any>'."
            },
            {
                "path": "assets-ts/components/datePicker/datePicker.tsx",
                "message": "Argument of type '{ [x: string]: string | false; dateError: string; dateValidated: false; }' is not assignable to parameter of type 'StateTypes | ((prevState: Readonly<StateTypes>, props: Readonly<PropTypes>) => StateTypes | Pick<StateTypes, keyof StateTypes> | null) | Pick<...> | null'."
            },
            {
                "path": "assets-ts/components/datePicker/datePicker.tsx",
                "message": "Type '{ [x: string]: string | false; dateError: string; dateValidated: false; }' is missing the following properties from type 'Pick<StateTypes, keyof StateTypes>': day, month, year, showCalendar"
            },
            {
                "path": "assets-ts/components/datePicker/datePicker.tsx",
                "message": "Argument of type '{ [x: string]: string | false; dateError: string; dateValidated: false; }' is not assignable to parameter of type 'StateTypes | ((prevState: Readonly<StateTypes>, props: Readonly<PropTypes>) => StateTypes | Pick<StateTypes, keyof StateTypes> | null) | Pick<...> | null'."
            },
            {
                "path": "assets-ts/components/datePicker/datePicker.tsx",
                "message": "Type '{ [x: string]: string | false; dateError: string; dateValidated: false; }' is missing the following properties from type 'Pick<StateTypes, keyof StateTypes>': day, month, year, showCalendar"
            },
            {
                "path": "assets-ts/components/directDebit/__tests__/directDebitReducerTest.ts",
                "message": "Argument of type '{}' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/components/directDebit/__tests__/directDebitReducerTest.ts",
                "message": "Type '{}' is missing the following properties from type '{ type: \"DIRECT_DEBIT_SET_FORM_PHASE\"; phase: Phase; }': type, phase"
            },
            {
                "path": "assets-ts/components/directDebit/directDebitForm/directDebitForm.tsx",
                "message": "Argument of type '(...args: any[]) => any' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitForm/directDebitForm.tsx",
                "message": "Type '(...args: any[]) => any' is missing the following properties from type '{ type: \"DIRECT_DEBIT_SET_FORM_PHASE\"; phase: Phase; }': type, phase"
            },
            {
                "path": "assets-ts/components/directDebit/directDebitForm/directDebitForm.tsx",
                "message": "Argument of type '(...args: any[]) => any' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitForm/directDebitForm.tsx",
                "message": "Type '(...args: any[]) => any' is missing the following properties from type '{ type: \"DIRECT_DEBIT_SET_FORM_PHASE\"; phase: Phase; }': type, phase"
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/directDebitForm.tsx",
                "message": "Argument of type '(...args: any[]) => any' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/directDebitForm.tsx",
                "message": "Argument of type '{ [x: number]: any; }' is not assignable to parameter of type 'StateTypes | ((prevState: Readonly<StateTypes>, props: Readonly<PropTypes>) => StateTypes | Pick<StateTypes, keyof StateTypes> | null) | Pick<...> | null'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/directDebitForm.tsx",
                "message": "Type '{ [x: number]: any; }' is missing the following properties from type 'Pick<StateTypes, keyof StateTypes>': sortCodeString, accountNumber, accountHolderConfirmation, accountHolderName, and 4 more."
            },
            {
                "path": "assets-ts/components/directDebit/helpers/ajax.ts",
                "message": "Argument of type '{ method: string; headers: { 'Content-Type': string; 'Csrf-Token': string; }; credentials: string; body: string; }' is not assignable to parameter of type 'RequestInit'."
            },
            {
                "path": "assets-ts/components/directDebit/helpers/ajax.ts",
                "message": "Types of property 'credentials' are incompatible."
            },
            {
                "path": "assets-ts/components/directDebit/helpers/ajax.ts",
                "message": "Type 'string' is not assignable to type 'RequestCredentials | undefined'."
            },
            {
                "path": "assets-ts/components/list/list.tsx",
                "message": "Argument of type 'typeof ListItem' is not assignable to parameter of type 'ComponentType<ListItemProps>'."
            },
            {
                "path": "assets-ts/components/list/list.tsx",
                "message": "Type 'typeof ListItem' is not assignable to type 'FunctionComponent<ListItemProps>'."
            },
            {
                "path": "assets-ts/components/list/list.tsx",
                "message": "The types of 'defaultProps.size' are incompatible between these types."
            },
            {
                "path": "assets-ts/components/list/list.tsx",
                "message": "Type 'string' is not assignable to type 'ListBulletSize | undefined'."
            },
            {
                "path": "assets-ts/components/list/list.tsx",
                "message": "Argument of type 'typeof ListItemWithSubtext' is not assignable to parameter of type 'ComponentType<ListItemProps>'."
            },
            {
                "path": "assets-ts/components/list/list.tsx",
                "message": "Type 'typeof ListItemWithSubtext' is not assignable to type 'FunctionComponent<ListItemProps>'."
            },
            {
                "path": "assets-ts/components/list/list.tsx",
                "message": "The types of 'defaultProps.size' are incompatible between these types."
            },
            {
                "path": "assets-ts/components/list/list.tsx",
                "message": "Type 'string' is not assignable to type 'ListBulletSize | undefined'."
            },
            {
                "path": "assets-ts/components/marketingConsent/helpers.ts",
                "message": "Argument of type '{ method: string; headers: { 'Content-Type': string; 'Csrf-Token': string; }; credentials: string; body: string; }' is not assignable to parameter of type 'RequestInit'."
            },
            {
                "path": "assets-ts/components/marketingConsent/helpers.ts",
                "message": "Types of property 'credentials' are incompatible."
            },
            {
                "path": "assets-ts/components/marketingConsent/helpers.ts",
                "message": "Type 'string' is not assignable to type 'RequestCredentials | undefined'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/__tests__/addressFieldsStore.ts",
                "message": "Argument of type '{ fields: { country: string; city: null; lineOne: null; lineTwo: null; postCode: null; state: null; formErrors: never[]; }; }' is not assignable to parameter of type '{ fields: AddressFieldsState; postcode: PostcodeFinderState; }'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/__tests__/addressFieldsStore.ts",
                "message": "Property 'postcode' is missing in type '{ fields: { country: string; city: null; lineOne: null; lineTwo: null; postCode: null; state: null; formErrors: never[]; }; }' but required in type '{ fields: AddressFieldsState; postcode: PostcodeFinderState; }'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/__tests__/addressFieldsStore.ts",
                "message": "Argument of type '{ fields: { country: string; city: null; lineOne: null; lineTwo: null; postCode: null; state: null; formErrors: never[]; }; }' is not assignable to parameter of type '{ fields: AddressFieldsState; postcode: PostcodeFinderState; }'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/__tests__/addressFieldsStore.ts",
                "message": "Property 'postcode' is missing in type '{ fields: { country: string; city: null; lineOne: null; lineTwo: null; postCode: null; state: null; formErrors: never[]; }; }' but required in type '{ fields: AddressFieldsState; postcode: PostcodeFinderState; }'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Argument of type '{ ONE_OFF: string; MONTHLY: string; ANNUAL: string; }' is not assignable to parameter of type 'SelectedAmounts'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Types of property 'MONTHLY' are incompatible."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Type 'string' is not assignable to type 'number | \"other\"'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Argument of type '{ ONE_OFF: string; MONTHLY: string; ANNUAL: string; }' is not assignable to parameter of type 'SelectedAmounts'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Argument of type '{ ONE_OFF: string; MONTHLY: string; ANNUAL: string; }' is not assignable to parameter of type 'SelectedAmounts'."
            },
            {
                "path": "assets-ts/helpers/__tests__/promiseTest.ts",
                "message": "Argument of type '(done: any, fail: any) => void' is not assignable to parameter of type 'ProvidesCallback'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Argument of type '{ mockTest: { type: string; variants: { id: string; }[]; audiences: { US: { offset: number; size: number; breakpoint: { minWidth: string; maxWidth: string; }; }; }; isActive: boolean; referrerControlled: boolean; seed: number; }; }' is not assignable to parameter of type 'Tests'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Property 'mockTest' is incompatible with index signature."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ type: string; variants: { id: string; }[]; audiences: { US: { offset: number; size: number; breakpoint: { minWidth: string; maxWidth: string; }; }; }; isActive: boolean; referrerControlled: boolean; seed: number; }' is not assignable to type 'Test'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Types of property 'audiences' are incompatible."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ US: { offset: number; size: number; breakpoint: { minWidth: string; maxWidth: string; }; }; }' is not assignable to type 'Audiences'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Property 'US' is incompatible with index signature."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ offset: number; size: number; breakpoint: { minWidth: string; maxWidth: string; }; }' is not assignable to type 'Audience'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "The types of 'breakpoint.minWidth' are incompatible between these types."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type 'string' is not assignable to type '\"mobile\" | \"mobileMedium\" | \"mobileLandscape\" | \"phablet\" | \"tablet\" | \"desktop\" | \"leftCol\" | \"wide\" | undefined'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Argument of type '{ mockTest: { type: string; variants: { id: string; }[]; audiences: { US: { offset: number; size: number; breakpoint: { minWidth: string; }; }; }; isActive: boolean; referrerControlled: boolean; seed: number; }; }' is not assignable to parameter of type 'Tests'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Property 'mockTest' is incompatible with index signature."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ type: string; variants: { id: string; }[]; audiences: { US: { offset: number; size: number; breakpoint: { minWidth: string; }; }; }; isActive: boolean; referrerControlled: boolean; seed: number; }' is not assignable to type 'Test'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Types of property 'audiences' are incompatible."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ US: { offset: number; size: number; breakpoint: { minWidth: string; }; }; }' is not assignable to type 'Audiences'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Property 'US' is incompatible with index signature."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ offset: number; size: number; breakpoint: { minWidth: string; }; }' is not assignable to type 'Audience'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "The types of 'breakpoint.minWidth' are incompatible between these types."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type 'string' is not assignable to type '\"mobile\" | \"mobileMedium\" | \"mobileLandscape\" | \"phablet\" | \"tablet\" | \"desktop\" | \"leftCol\" | \"wide\" | undefined'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Argument of type '{ mockTest: { type: string; variants: { id: string; }[]; audiences: { US: { offset: number; size: number; breakpoint: { minWidth: string; maxWidth: undefined; }; }; }; isActive: boolean; referrerControlled: boolean; seed: number; }; }' is not assignable to parameter of type 'Tests'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Property 'mockTest' is incompatible with index signature."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ type: string; variants: { id: string; }[]; audiences: { US: { offset: number; size: number; breakpoint: { minWidth: string; maxWidth: undefined; }; }; }; isActive: boolean; referrerControlled: boolean; seed: number; }' is not assignable to type 'Test'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Types of property 'audiences' are incompatible."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ US: { offset: number; size: number; breakpoint: { minWidth: string; maxWidth: undefined; }; }; }' is not assignable to type 'Audiences'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Property 'US' is incompatible with index signature."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ offset: number; size: number; breakpoint: { minWidth: string; maxWidth: undefined; }; }' is not assignable to type 'Audience'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "The types of 'breakpoint.minWidth' are incompatible between these types."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type 'string' is not assignable to type '\"mobile\" | \"mobileMedium\" | \"mobileLandscape\" | \"phablet\" | \"tablet\" | \"desktop\" | \"leftCol\" | \"wide\" | undefined'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Argument of type '{ mockTest: { type: string; variants: { id: string; }[]; audiences: { US: { offset: number; size: number; breakpoint: { maxWidth: string; }; }; }; isActive: boolean; referrerControlled: boolean; seed: number; }; }' is not assignable to parameter of type 'Tests'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Property 'mockTest' is incompatible with index signature."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ type: string; variants: { id: string; }[]; audiences: { US: { offset: number; size: number; breakpoint: { maxWidth: string; }; }; }; isActive: boolean; referrerControlled: boolean; seed: number; }' is not assignable to type 'Test'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Types of property 'audiences' are incompatible."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ US: { offset: number; size: number; breakpoint: { maxWidth: string; }; }; }' is not assignable to type 'Audiences'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Property 'US' is incompatible with index signature."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ offset: number; size: number; breakpoint: { maxWidth: string; }; }' is not assignable to type 'Audience'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "The types of 'breakpoint.maxWidth' are incompatible between these types."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type 'string' is not assignable to type '\"mobile\" | \"mobileMedium\" | \"mobileLandscape\" | \"phablet\" | \"tablet\" | \"desktop\" | \"leftCol\" | \"wide\" | undefined'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Argument of type '{ mockTest: { type: string; variants: { id: string; }[]; audiences: { US: { offset: number; size: number; breakpoint: { minWidth: undefined; maxWidth: string; }; }; }; isActive: boolean; referrerControlled: boolean; seed: number; }; }' is not assignable to parameter of type 'Tests'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Property 'mockTest' is incompatible with index signature."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ type: string; variants: { id: string; }[]; audiences: { US: { offset: number; size: number; breakpoint: { minWidth: undefined; maxWidth: string; }; }; }; isActive: boolean; referrerControlled: boolean; seed: number; }' is not assignable to type 'Test'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Types of property 'audiences' are incompatible."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ US: { offset: number; size: number; breakpoint: { minWidth: undefined; maxWidth: string; }; }; }' is not assignable to type 'Audiences'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Property 'US' is incompatible with index signature."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type '{ offset: number; size: number; breakpoint: { minWidth: undefined; maxWidth: string; }; }' is not assignable to type 'Audience'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "The types of 'breakpoint.maxWidth' are incompatible between these types."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Type 'string' is not assignable to type '\"mobile\" | \"mobileMedium\" | \"mobileLandscape\" | \"phablet\" | \"tablet\" | \"desktop\" | \"leftCol\" | \"wide\" | undefined'."
            },
            {
                "path": "assets-ts/helpers/abTests/abtest.ts",
                "message": "Argument of type 'string | null' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/helpers/abTests/abtest.ts",
                "message": "Type 'null' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/abTests/abtest.ts",
                "message": "Argument of type 'number' is not assignable to parameter of type 'string | undefined'."
            },
            {
                "path": "assets-ts/helpers/contributions.ts",
                "message": "Argument of type 'string | number | null' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/helpers/contributions.ts",
                "message": "Type 'null' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/forms/checkouts.ts",
                "message": "Argument of type '{ contributionType: keyof RegularContributionTypeMap<null> | \"ONE_OFF\" | null | undefined; }[]' is not assignable to parameter of type 'ContributionTypeSetting[]'."
            },
            {
                "path": "assets-ts/helpers/forms/checkouts.ts",
                "message": "Type '{ contributionType: keyof RegularContributionTypeMap<null> | \"ONE_OFF\" | null | undefined; }' is not assignable to type 'ContributionTypeSetting'."
            },
            {
                "path": "assets-ts/helpers/forms/checkouts.ts",
                "message": "Types of property 'contributionType' are incompatible."
            },
            {
                "path": "assets-ts/helpers/forms/checkouts.ts",
                "message": "Type 'keyof RegularContributionTypeMap<null> | \"ONE_OFF\" | null | undefined' is not assignable to type 'keyof RegularContributionTypeMap<null> | \"ONE_OFF\"'."
            },
            {
                "path": "assets-ts/helpers/forms/checkouts.ts",
                "message": "Type 'undefined' is not assignable to type 'keyof RegularContributionTypeMap<null> | \"ONE_OFF\"'."
            },
            {
                "path": "assets-ts/helpers/forms/checkouts.ts",
                "message": "Argument of type 'string | null' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/helpers/forms/checkouts.ts",
                "message": "Type 'null' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/forms/checkouts.ts",
                "message": "Argument of type 'number | \"other\"' is not assignable to parameter of type 'number'."
            },
            {
                "path": "assets-ts/helpers/forms/checkouts.ts",
                "message": "Type 'string' is not assignable to type 'number'."
            },
            {
                "path": "assets-ts/helpers/forms/formValidation.ts",
                "message": "Argument of type 'Date | null' is not assignable to parameter of type 'Date'."
            },
            {
                "path": "assets-ts/helpers/forms/formValidation.ts",
                "message": "Type 'null' is not assignable to type 'Date'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Argument of type '{ credentials: string; method: string; headers: { 'Content-Type': string; 'Csrf-Token': string; }; body: string; }' is not assignable to parameter of type 'RequestInit'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Argument of type '{ credentials: string; method: string; headers: { 'Content-Type': string; 'Csrf-Token': string; }; body: string; }' is not assignable to parameter of type 'RequestInit'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Argument of type '{ credentials: string; method: string; headers: { 'Content-Type': string; 'Csrf-Token': string; }; body: string; }' is not assignable to parameter of type 'RequestInit'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Types of property 'credentials' are incompatible."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Type 'string' is not assignable to type 'RequestCredentials | undefined'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Argument of type '(response: Response) => Promise<PaymentResult> | { paymentStatus: string; error: string; }' is not assignable to parameter of type '(value: Response) => PaymentResult | PromiseLike<PaymentResult>'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type 'Promise<PaymentResult> | { paymentStatus: string; error: string; }' is not assignable to type 'PaymentResult | PromiseLike<PaymentResult>'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type '{ paymentStatus: string; error: string; }' is not assignable to type 'PaymentResult | PromiseLike<PaymentResult>'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type '{ paymentStatus: string; error: string; }' is not assignable to type '{ paymentStatus: \"failure\"; error: ErrorReason; }'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Types of property 'paymentStatus' are incompatible."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/readerRevenueApis.ts",
                "message": "Type 'string' is not assignable to type '\"failure\"'."
            },
            {
                "path": "assets-ts/helpers/identityApis.ts",
                "message": "Argument of type '(resp: {    userType: UserType;}) => UserType' is not assignable to parameter of type '(value: Record<string, any>) => \"current\" | \"new\" | \"guest\" | PromiseLike<\"current\" | \"new\" | \"guest\">'."
            },
            {
                "path": "assets-ts/helpers/identityApis.ts",
                "message": "Types of parameters 'resp' and 'value' are incompatible."
            },
            {
                "path": "assets-ts/helpers/identityApis.ts",
                "message": "Property 'userType' is missing in type 'Record<string, any>' but required in type '{ userType: UserType; }'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/__tests__/countryTest.ts",
                "message": "Argument of type 'null' is not assignable to parameter of type 'string | undefined'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/__tests__/countryTest.ts",
                "message": "Argument of type 'null' is not assignable to parameter of type 'string | undefined'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/__tests__/currencyTest.ts",
                "message": "Argument of type '\"ZZ\"' is not assignable to parameter of type 'CountryGroupId'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/country.ts",
                "message": "Argument of type 'null' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/helpers/page/__tests__/pageTest.ts",
                "message": "Argument of type '{ campaign: string; referrerAcquisitionData: { referrerPageviewId: null; campaignCode: null; componentId: null; componentType: null; source: null; abTests: never[]; queryParameters: never[]; }; internationalisation: { ...; }; abParticipations: {}; otherQueryParams: never[]; settings: { ...; }; }' is not assignable to parameter of type 'CommonState'."
            },
            {
                "path": "assets-ts/helpers/page/__tests__/pageTest.ts",
                "message": "Type '{ campaign: string; referrerAcquisitionData: { referrerPageviewId: null; campaignCode: null; componentId: null; componentType: null; source: null; abTests: never[]; queryParameters: never[]; }; internationalisation: { ...; }; abParticipations: {}; otherQueryParams: never[]; settings: { ...; }; }' is missing the following properties from type 'CommonState': amounts, defaultAmounts"
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Argument of type '{ price: number; currency: string; fixedTerm: boolean; promotions: { name: string; description: string; promoCode: string; discountedPrice: number; numberOfDiscountedPeriods: number; discount: { ...; }; }[]; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Types of property 'currency' are incompatible."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Type 'string' is not assignable to type 'IsoCurrency'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Argument of type '{ price: number; currency: string; fixedTerm: boolean; promotions: never[]; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Types of property 'currency' are incompatible."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Type 'string' is not assignable to type 'IsoCurrency'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Argument of type '{ price: number; currency: string; fixedTerm: boolean; promotions: { name: string; description: string; promoCode: string; discountedPrice: number; numberOfDiscountedPeriods: number; discount: { ...; }; }[]; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Types of property 'currency' are incompatible."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Type 'string' is not assignable to type 'IsoCurrency'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Argument of type '{ price: number; currency: string; fixedTerm: boolean; promotions: never[]; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Types of property 'currency' are incompatible."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Type 'string' is not assignable to type 'IsoCurrency'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Argument of type '{ price: number; currency: string; fixedTerm: boolean; promotions: { name: string; description: string; promoCode: string; discountedPrice: number; numberOfDiscountedPeriods: number; discount: { ...; }; }[]; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Argument of type '{ price: number; currency: string; fixedTerm: boolean; promotions: never[]; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Argument of type '{ price: number; currency: string; fixedTerm: boolean; promotions: { name: string; description: string; promoCode: string; discountedPrice: number; numberOfDiscountedPeriods: number; discount: { ...; }; }[]; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsDigitalTests.ts",
                "message": "Argument of type '{ price: number; currency: string; fixedTerm: boolean; promotions: never[]; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsTests.ts",
                "message": "Argument of type '{ price: number; currency: string; promotions: { name: string; description: string; promoCode: string; discountedPrice: number; numberOfDiscountedPeriods: number; discount: { amount: number; durationMonths: number; }; }[]; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsTests.ts",
                "message": "Property 'fixedTerm' is missing in type '{ price: number; currency: string; promotions: { name: string; description: string; promoCode: string; discountedPrice: number; numberOfDiscountedPeriods: number; discount: { amount: number; durationMonths: number; }; }[]; }' but required in type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsTests.ts",
                "message": "Argument of type '{ price: number; currency: string; promotions: never[]; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsTests.ts",
                "message": "Property 'fixedTerm' is missing in type '{ price: number; currency: string; promotions: never[]; }' but required in type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsTests.ts",
                "message": "Argument of type '{ price: number; currency: string; promotions: { name: string; description: string; promoCode: string; discountedPrice: number; numberOfDiscountedPeriods: number; discount: { amount: number; durationMonths: number; }; }[]; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsTests.ts",
                "message": "Property 'fixedTerm' is missing in type '{ price: number; currency: string; promotions: { name: string; description: string; promoCode: string; discountedPrice: number; numberOfDiscountedPeriods: number; discount: { amount: number; durationMonths: number; }; }[]; }' but required in type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsTests.ts",
                "message": "Argument of type '{ price: number; currency: string; promotions: { name: string; description: string; promoCode: string; introductoryPrice: { price: number; periodLength: number; periodType: string; }; }[]; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/priceDescriptionsTests.ts",
                "message": "Property 'fixedTerm' is missing in type '{ price: number; currency: string; promotions: { name: string; description: string; promoCode: string; introductoryPrice: { price: number; periodLength: number; periodType: string; }; }[]; }' but required in type 'ProductPrice'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/productPricesTests.ts",
                "message": "Argument of type '{ 'United Kingdom': { Collection: { SixdayPlus: { Monthly: { GBP: { price: number; savingVsRetail: number; currency: string; fixedTerm: boolean; promotions: never[]; }; }; }; SundayPlus: { Monthly: { GBP: { price: number; savingVsRetail: number; currency: string; fixedTerm: boolean; promotions: never[]; }; }; }; ......' is not assignable to parameter of type 'ProductPrices'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/productPricesTests.ts",
                "message": "Type '{ 'United Kingdom': { Collection: { SixdayPlus: { Monthly: { GBP: { price: number; savingVsRetail: number; currency: string; fixedTerm: boolean; promotions: never[]; }; }; }; SundayPlus: { Monthly: { GBP: { price: number; savingVsRetail: number; currency: string; fixedTerm: boolean; promotions: never[]; }; }; }; ......' is missing the following properties from type 'ProductPrices': \"United States\", Australia, \"New Zealand\", Canada, and 2 more."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/productPricesTests.ts",
                "message": "Argument of type '{}' is not assignable to parameter of type 'Promotion'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/productPricesTests.ts",
                "message": "Type '{}' is missing the following properties from type 'Promotion': name, description, promoCode"
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/productPricesTests.ts",
                "message": "Argument of type '{ discountedPrice: number; }' is not assignable to parameter of type 'Promotion'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/productPricesTests.ts",
                "message": "Type '{ discountedPrice: number; }' is missing the following properties from type 'Promotion': name, description, promoCode"
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/productPricesTests.ts",
                "message": "Argument of type '{ discountedPrice: number; }' is not assignable to parameter of type 'Promotion'."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/productPricesTests.ts",
                "message": "Type '{ discountedPrice: number; }' is missing the following properties from type 'Promotion': name, description, promoCode"
            },
            {
                "path": "assets-ts/helpers/productPrice/priceDescriptions.ts",
                "message": "Argument of type 'IntroductoryPriceBenefit | undefined' is not assignable to parameter of type 'IntroductoryPriceBenefit'."
            },
            {
                "path": "assets-ts/helpers/productPrice/priceDescriptions.ts",
                "message": "Type 'undefined' is not assignable to type 'IntroductoryPriceBenefit'."
            },
            {
                "path": "assets-ts/helpers/productPrice/priceDescriptions.ts",
                "message": "Argument of type 'number | undefined' is not assignable to parameter of type 'number'."
            },
            {
                "path": "assets-ts/helpers/productPrice/priceDescriptions.ts",
                "message": "Type 'undefined' is not assignable to type 'number'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Argument of type '{ field: string; message: string; }[]' is not assignable to parameter of type 'FormError<FormField>[]'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Type '{ field: string; message: string; }' is not assignable to type 'FormError<FormField>'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Types of property 'field' are incompatible."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Type 'string' is not assignable to type 'FormField'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/submit.ts",
                "message": "Argument of type '{ type: string; formSubmitted: boolean; }' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/submit.ts",
                "message": "Type '{ type: string; formSubmitted: boolean; }' is not assignable to type '{ type: \"SET_FORM_SUBMITTED\"; formSubmitted: boolean; }'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/submit.ts",
                "message": "Types of property 'type' are incompatible."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/submit.ts",
                "message": "Type 'string' is not assignable to type '\"SET_FORM_SUBMITTED\"'."
            },
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Argument of type 'string | null | undefined' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Type 'undefined' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Argument of type 'string | null | undefined' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Type 'undefined' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Argument of type 'string | Location' is not assignable to parameter of type 'string | number | boolean'."
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type 'Location' is not assignable to type 'string | number | boolean'."
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type 'Location' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/urls/url.ts",
                "message": "Argument of type 'Location' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/helpers/urls/url.ts",
                "message": "Argument of type 'string | null | undefined' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/helpers/urls/url.ts",
                "message": "Type 'undefined' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/helpers/urls/url.ts",
                "message": "Argument of type 'Location' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{}' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{}' is missing the following properties from type '{ type: \"SET_IS_RETURNING_CONTRIBUTOR\"; isReturningContributor: boolean; }': type, isReturningContributor"
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{}' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{}' is missing the following properties from type '{ type: \"SET_IS_RETURNING_CONTRIBUTOR\"; isReturningContributor: boolean; }': type, isReturningContributor"
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{}' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{}' is missing the following properties from type '{ type: \"SET_IS_RETURNING_CONTRIBUTOR\"; isReturningContributor: boolean; }': type, isReturningContributor"
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{ type: string; name: string; }' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{ type: string; name: string; }' is not assignable to type '{ type: \"SET_FULL_NAME\"; name: string; }'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Types of property 'type' are incompatible."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type 'string' is not assignable to type '\"SET_FULL_NAME\"'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{ type: string; name: string; }' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{ type: string; name: string; }' is not assignable to type '{ type: \"SET_FULL_NAME\"; name: string; }'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Types of property 'type' are incompatible."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type 'string' is not assignable to type '\"SET_FULL_NAME\"'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{ type: string; name: string; }' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{ type: string; name: string; }' is not assignable to type '{ type: \"SET_FULL_NAME\"; name: string; }'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Types of property 'type' are incompatible."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type 'string' is not assignable to type '\"SET_FULL_NAME\"'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{ type: string; name: string; }' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{ type: string; name: string; }' is not assignable to type '{ type: \"SET_FULL_NAME\"; name: string; }'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Types of property 'type' are incompatible."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type 'string' is not assignable to type '\"SET_FULL_NAME\"'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{ type: string; testUser: boolean; }' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{ type: string; testUser: boolean; }' is not assignable to type '{ type: \"SET_TEST_USER\"; testUser: boolean; }'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Types of property 'type' are incompatible."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type 'string' is not assignable to type '\"SET_TEST_USER\"'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{ type: string; postDeploymentTestUser: boolean; }' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{ type: string; postDeploymentTestUser: boolean; }' is not assignable to type '{ type: \"SET_POST_DEPLOYMENT_TEST_USER\"; postDeploymentTestUser: boolean; }'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Types of property 'type' are incompatible."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type 'string' is not assignable to type '\"SET_POST_DEPLOYMENT_TEST_USER\"'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{ type: string; email: string; }' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{ type: string; email: string; }' is not assignable to type '{ type: \"SET_EMAIL\"; email: string; }'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Types of property 'type' are incompatible."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type 'string' is not assignable to type '\"SET_EMAIL\"'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{ type: string; stateField: string; }' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{ type: string; stateField: string; }' is not assignable to type '{ type: \"SET_STATEFIELD\"; stateField: string; }'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Types of property 'type' are incompatible."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type 'string' is not assignable to type '\"SET_STATEFIELD\"'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{ type: string; preference: boolean; }' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{ type: string; preference: boolean; }' is not assignable to type '{ type: \"SET_GNM_MARKETING\"; preference: boolean; }'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Types of property 'type' are incompatible."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type 'string' is not assignable to type '\"SET_GNM_MARKETING\"'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Argument of type '{ type: string; isReturningContributor: boolean; }' is not assignable to parameter of type 'Action'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type '{ type: string; isReturningContributor: boolean; }' is not assignable to type '{ type: \"SET_IS_RETURNING_CONTRIBUTOR\"; isReturningContributor: boolean; }'."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Types of property 'type' are incompatible."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Type 'string' is not assignable to type '\"SET_IS_RETURNING_CONTRIBUTOR\"'."
            },
            {
                "path": "assets-ts/helpers/utilities/logger.ts",
                "message": "Argument of type '{ level: string; }' is not assignable to parameter of type 'Severity | undefined'."
            },
            {
                "path": "assets-ts/helpers/utilities/logger.ts",
                "message": "Type '{ level: string; }' is not assignable to type 'Severity.Critical'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/ausMomentMap.tsx",
                "message": "Argument of type 'null' is not assignable to parameter of type 'TestimonialsCollection | (() => TestimonialsCollection)'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/ausMomentMap.tsx",
                "message": "Argument of type 'null' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/ausMomentMap.tsx",
                "message": "Argument of type 'string' is not assignable to parameter of type '((prevState: null) => null) | null'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/ausMomentMap.tsx",
                "message": "Argument of type 'string' is not assignable to parameter of type '((prevState: null) => null) | null'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/components/ShareableArticleContainer.tsx",
                "message": "Argument of type 'SerializedStyles' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/components/ShareableArticleContainer.tsx",
                "message": "Argument of type 'SerializedStyles' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/MustSignIn.tsx",
                "message": "Argument of type 'Location' is not assignable to parameter of type 'string | number | boolean'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Argument of type '(clientSecret: string) => Promise<{ paymentIntent?: PaymentIntent | undefined; error?: StripeError | undefined; }>' is not assignable to parameter of type '(clientSecret: string) => Promise<Stripe3DSResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Type 'Promise<{ paymentIntent?: PaymentIntent | undefined; error?: StripeError | undefined; }>' is not assignable to type 'Promise<Stripe3DSResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "Argument of type 'Option<string>' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "Type 'null' is not assignable to type 'string'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "Argument of type '(clientSecret: string) => Promise<{ paymentIntent?: PaymentIntent | undefined; error?: StripeError | undefined; }>' is not assignable to parameter of type '(clientSecret: string) => Promise<Stripe3DSResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "Type 'Promise<{ paymentIntent?: PaymentIntent | undefined; error?: StripeError | undefined; }>' is not assignable to type 'Promise<Stripe3DSResult>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "Type '{ paymentIntent?: PaymentIntent | undefined; error?: StripeError | undefined; }' is not assignable to type 'Stripe3DSResult'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "Types of property 'paymentIntent' are incompatible."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "Type 'PaymentIntent | undefined' is not assignable to type '{ id: string; }'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "Type 'undefined' is not assignable to type '{ id: string; }'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Argument of type '\"Stripe\" | \"PayPal\" | \"DirectDebit\" | \"ExistingCard\" | \"ExistingDirectDebit\" | \"AmazonPay\"' is not assignable to parameter of type '\"DirectDebit\" | \"ExistingDirectDebit\"'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Type '\"Stripe\"' is not assignable to type '\"DirectDebit\" | \"ExistingDirectDebit\"'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingInit.ts",
                "message": "Argument of type 'string' is not assignable to parameter of type 'keyof RegularContributionTypeMap<null> | \"ONE_OFF\"'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/feedbackWidget/feedbackWidget.tsx",
                "message": "Argument of type '{ positive: true; negative: false; }' is not assignable to parameter of type 'SetStateAction<{ positive: boolean; negative: boolean; open: boolean; }>'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/feedbackWidget/feedbackWidget.tsx",
                "message": "Property 'open' is missing in type '{ positive: true; negative: false; }' but required in type '{ positive: boolean; negative: boolean; open: boolean; }'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Argument of type '{ id: string; product: string; componentType: string; }' is not assignable to parameter of type 'TrackingProperties'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Types of property 'product' are incompatible."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Type 'string' is not assignable to type 'SubscriptionProduct | undefined'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Argument of type '(billingPeriod: BillingPeriod) => ProductSmall' is not assignable to parameter of type '(value: string, index: number, array: string[]) => ProductSmall'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Types of parameters 'billingPeriod' and 'value' are incompatible."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Type 'string' is not assignable to type 'BillingPeriod'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Argument of type '{ id: string; product: string; componentType: string; }' is not assignable to parameter of type 'TrackingProperties'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Argument of type '{ id: string; product: string; componentType: string; }' is not assignable to parameter of type 'TrackingProperties'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Types of property 'product' are incompatible."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Type 'string' is not assignable to type 'SubscriptionProduct | undefined'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Argument of type '{ id: string; product: string; componentType: string; }' is not assignable to parameter of type 'TrackingProperties'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Argument of type 'number | null | undefined' is not assignable to parameter of type 'Option<number>'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Type 'undefined' is not assignable to type 'Option<number>'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Argument of type '(billingPeriod: BillingPeriod) => Product' is not assignable to parameter of type '(value: string, index: number, array: string[]) => Product'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Types of parameters 'billingPeriod' and 'value' are incompatible."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Type 'string' is not assignable to type 'BillingPeriod'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlock.tsx",
                "message": "Argument of type '{ [x: string]: boolean; }' is not assignable to parameter of type 'StateTypes | ((prevState: Readonly<StateTypes>, props: Readonly<PropTypes>) => StateTypes | Pick<StateTypes, keyof StateTypes> | null) | Pick<...> | null'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlock.tsx",
                "message": "Type '{ [x: string]: boolean; }' is missing the following properties from type 'Pick<StateTypes, keyof StateTypes>': showDropDownDaily, showDropDownApp"
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlockAus.tsx",
                "message": "Argument of type '{ [x: string]: boolean; }' is not assignable to parameter of type 'StateTypes | ((prevState: Readonly<StateTypes>, props: Readonly<PropTypes>) => StateTypes | Pick<StateTypes, keyof StateTypes> | null) | Pick<...> | null'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/productBlock/productBlockAus.tsx",
                "message": "Type '{ [x: string]: boolean; }' is missing the following properties from type 'Pick<StateTypes, keyof StateTypes>': showDropDownDaily, showDropDownApp"
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.tsx",
                "message": "Argument of type '{ price: number | undefined; savingVsRetail?: number | undefined; currency: IsoCurrency; fixedTerm: boolean; promotions?: Promotion[] | undefined; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Argument of type '{ price: number | undefined; savingVsRetail?: number | undefined; currency: IsoCurrency; fixedTerm: boolean; promotions?: Promotion[] | undefined; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/helpers/options.ts",
                "message": "Argument of type 'string | null | undefined' is not assignable to parameter of type '\"Sunday\" | \"Weekend\" | \"Sixday\" | \"Everyday\"'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/helpers/options.ts",
                "message": "Type 'undefined' is not assignable to type '\"Sunday\" | \"Weekend\" | \"Sixday\" | \"Everyday\"'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/paperPrices.tsx",
                "message": "Argument of type '{ id: string; product: string; componentType: string; }' is not assignable to parameter of type 'TrackingProperties'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/paperPrices.tsx",
                "message": "Types of property 'product' are incompatible."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/paperPrices.tsx",
                "message": "Type 'string' is not assignable to type 'SubscriptionProduct | undefined'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/paperPrices.tsx",
                "message": "Argument of type '{ id: string; product: string; componentType: string; }' is not assignable to parameter of type 'TrackingProperties'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/paperSubscriptionLandingPageActions.ts",
                "message": "Argument of type 'null' is not assignable to parameter of type 'string'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/api.ts",
                "message": "Argument of type '(result: ValidationResult) => void' is not assignable to parameter of type '(value: Record<string, any>) => void | PromiseLike<void>'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/api.ts",
                "message": "Types of parameters 'result' and 'value' are incompatible."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/api.ts",
                "message": "Type 'Record<string, any>' is missing the following properties from type 'ValidationResult': valid, readerType, errorMessage"
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/api.ts",
                "message": "Argument of type '(result: ValidationResult) => void' is not assignable to parameter of type '(value: Record<string, any>) => void | PromiseLike<void>'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/api.ts",
                "message": "Types of parameters 'result' and 'value' are incompatible."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/api.ts",
                "message": "Type 'Record<string, any>' is not assignable to type 'ValidationResult'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/weeklyProductPrices.tsx",
                "message": "Argument of type '{ id: string; product: string; componentType: string; }' is not assignable to parameter of type 'TrackingProperties'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/weeklyProductPrices.tsx",
                "message": "Types of property 'product' are incompatible."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/weeklyProductPrices.tsx",
                "message": "Type 'string' is not assignable to type 'SubscriptionProduct | undefined'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/weeklyProductPrices.tsx",
                "message": "Argument of type '{ id: string; product: string; componentType: string; }' is not assignable to parameter of type 'TrackingProperties'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/weeklyProductPrices.tsx",
                "message": "Argument of type 'ProductPrice | { price: number; fixedTerm: boolean; currency: string; }' is not assignable to parameter of type 'ProductPrice'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/weeklyProductPrices.tsx",
                "message": "Type '{ price: number; fixedTerm: boolean; currency: string; }' is not assignable to type 'ProductPrice'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/weeklyProductPrices.tsx",
                "message": "Types of property 'currency' are incompatible."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/weeklyProductPrices.tsx",
                "message": "Type 'string' is not assignable to type 'IsoCurrency'."
            }
        ]
    },
    "TS2724": {
        "count": 2,
        "instances": [
            {
                "path": "assets-ts/components/checkoutForm/checkoutForm.tsx",
                "message": "'\"react\"' has no exported member named 'Element'. Did you mean 'CElement'?"
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "'\"react\"' has no exported member named 'Element'. Did you mean 'CElement'?"
            }
        ]
    },
    "TS2307": {
        "count": 23,
        "instances": [
            {
                "path": "assets-ts/components/countryGroupSwitcher/countryGroupSwitcher.tsx",
                "message": "Cannot find module './countryGroupSwitcher.module.scss' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/components/datePicker/datePicker.tsx",
                "message": "Cannot find module './calendarIcon.svg' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/components/headers/header/header.tsx",
                "message": "Cannot find module './padlock.svg' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/components/menu/menu.tsx",
                "message": "Cannot find module './menu.module.scss' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/components/secureTransactionIndicator/secureTransactionIndicator.tsx",
                "message": "Cannot find module './securePadlock.svg' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/layout.tsx",
                "message": "Cannot find module './layout.module.scss' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/summary.tsx",
                "message": "Cannot find module './summary.module.scss' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/summary.tsx",
                "message": "Cannot find module './dropDownArrowUp.svg' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/helpers/page/page.ts",
                "message": "Cannot find module 'ophan' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/helpers/tracking/acquisitions.ts",
                "message": "Cannot find module 'ophan' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/helpers/tracking/ophan.ts",
                "message": "Cannot find module 'ophan' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/ausMomentMap.tsx",
                "message": "Cannot find module 'ophan' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Cannot find module './creditCardsROW.svg' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Cannot find module './creditCardsUS.svg' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/thankYouGift.tsx",
                "message": "Cannot find module 'pages/digital-subscription-checkout/components/thankYou/icons/clock.png' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/thankYouGift.tsx",
                "message": "Cannot find module 'pages/digital-subscription-checkout/components/thankYou/icons/list.png' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/thankYouGift.tsx",
                "message": "Cannot find module 'pages/digital-subscription-checkout/components/thankYou/icons/gift.png' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/thankYouGift.tsx",
                "message": "Cannot find module 'pages/digital-subscription-checkout/components/thankYou/icons/person.png' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/thankYouGift.tsx",
                "message": "Cannot find module 'pages/digital-subscription-checkout/components/thankYou/icons/phone.png' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/editorialVoice/editorialVoice.tsx",
                "message": "Cannot find module './whyYourSupportMatters.svg' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/thankYou.tsx",
                "message": "Cannot find module 'components/subscriptionCheckouts/thankYou/thankYou.module.scss' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/pages/showcase/components/hero.tsx",
                "message": "Cannot find module './hero.svg' or its corresponding type declarations."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/thankYou.tsx",
                "message": "Cannot find module 'components/subscriptionCheckouts/thankYou/thankYou.module.scss' or its corresponding type declarations."
            }
        ]
    },
    "TS2339": {
        "count": 171,
        "instances": [
            {
                "path": "assets-ts/components/directDebit/directDebitForm/directDebitForm.tsx",
                "message": "Property 'value' does not exist on type 'EventTarget'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitForm/directDebitForm.tsx",
                "message": "Property 'value' does not exist on type 'EventTarget'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitForm/directDebitForm.tsx",
                "message": "Property 'value' does not exist on type 'EventTarget'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitForm/directDebitForm.tsx",
                "message": "Property 'checked' does not exist on type 'EventTarget'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/directDebitForm.tsx",
                "message": "Property 'value' does not exist on type 'EventTarget'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/directDebitForm.tsx",
                "message": "Property 'value' does not exist on type 'EventTarget'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/directDebitForm.tsx",
                "message": "Property 'value' does not exist on type 'EventTarget'."
            },
            {
                "path": "assets-ts/components/directDebit/directDebitProgressiveDisclosure/directDebitForm.tsx",
                "message": "Property 'checked' does not exist on type 'EventTarget'."
            },
            {
                "path": "assets-ts/components/footerCompliant/DigitalFooter.tsx",
                "message": "Property 'checkout' does not exist on type '{ productPrices: ProductPrices; promotionCopy: PromotionCopy | null | undefined; orderIsAGift: boolean; }'."
            },
            {
                "path": "assets-ts/components/paypalExpressButton/PayPalExpressButton.tsx",
                "message": "Property 'paypal' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Property 'handleCardSetup' does not exist on type 'Stripe'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Property 'grecaptcha' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Property 'grecaptcha' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Property 'grecaptcha' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Property 'v2OnloadCallback' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/__tests__/urlTest.ts",
                "message": "Property 'jsdom' does not exist on type 'Global'."
            },
            {
                "path": "assets-ts/helpers/abTests/abtest.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/abTests/abtest.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/abTests/abtest.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/campaigns/campaigns.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/campaigns/campaigns.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/csrf/csrfReducer.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/csrf/csrfReducer.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/csrf/csrfReducer.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/existingPaymentMethods/existingPaymentMethods.ts",
                "message": "Property 'billingAccountId' does not exist on type 'ExistingPaymentMethod'."
            },
            {
                "path": "assets-ts/helpers/forms/existingPaymentMethods/existingPaymentMethods.ts",
                "message": "Property 'billingAccountId' does not exist on type 'NotRecentlySignedInExistingPaymentMethod'."
            },
            {
                "path": "assets-ts/helpers/forms/existingPaymentMethods/existingPaymentMethods.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/formValidation.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/formValidation.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/formValidation.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/amazonPay.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/amazonPay.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/amazonPay.ts",
                "message": "Property 'onAmazonLoginReady' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/amazonPay.ts",
                "message": "Property 'amazon' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/amazonPay.ts",
                "message": "Property 'amazon' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/amazonPay.ts",
                "message": "Property 'amazon' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/amazonPay.ts",
                "message": "Property 'amazon' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/amazonPay.ts",
                "message": "Property 'onAmazonPaymentsReady' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/amazonPay.ts",
                "message": "Property 'OffAmazonPayments' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/amazonPay.ts",
                "message": "Property 'OffAmazonPayments' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/oneOffContributions.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/oneOffContributions.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Property 'enablePayPalButton' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Property 'disablePayPalButton' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "Property 'paypal' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/stripe.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/stripe.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/stripe.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/stripe.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/stripe.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/forms/stripe.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/globalsAndSwitches/globals.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/__tests__/countryGroupTest.ts",
                "message": "Property 'jsdom' does not exist on type 'Global'."
            },
            {
                "path": "assets-ts/helpers/internationalisation/__tests__/countryTest.ts",
                "message": "Property 'jsdom' does not exist on type 'Global'."
            },
            {
                "path": "assets-ts/helpers/page/__tests__/pageTest.ts",
                "message": "Property 'reducer' does not exist on type 'Global'."
            },
            {
                "path": "assets-ts/helpers/page/__tests__/pageTest.ts",
                "message": "Property 'reducer' does not exist on type 'Global'."
            },
            {
                "path": "assets-ts/helpers/page/__tests__/pageTest.ts",
                "message": "Property 'reducer' does not exist on type 'Global'."
            },
            {
                "path": "assets-ts/helpers/page/page.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/page/page.ts",
                "message": "Property '__REDUX_DEVTOOLS_EXTENSION_COMPOSE__' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/page/page.ts",
                "message": "Property '__REDUX_DEVTOOLS_EXTENSION__' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/page/page.ts",
                "message": "Property '__REDUX_DEVTOOLS_EXTENSION__' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/rendering/render.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/rendering/render.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Property 'guardian' does not exist on type 'Global'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/checkoutFormIsSubmittableActions.ts",
                "message": "Property 'enablePayPalButton' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/checkoutFormIsSubmittableActions.ts",
                "message": "Property 'enablePayPalButton' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/checkoutFormIsSubmittableActions.ts",
                "message": "Property 'disablePayPalButton' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/checkoutFormIsSubmittableActions.ts",
                "message": "Property 'disablePayPalButton' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/formReducer.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/submit.ts",
                "message": "Property 'subscriptionCreationPending' does not exist on type '{ paymentStatus: \"success\"; } | { paymentStatus: \"success\"; subscriptionCreationPending: true; }'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/submit.ts",
                "message": "Property 'subscriptionCreationPending' does not exist on type '{ paymentStatus: \"success\"; }'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/googleTagManagerTest.ts",
                "message": "Property 'currency' does not exist on type '{ paymentMethod: string | null | undefined; }'."
            },
            {
                "path": "assets-ts/helpers/tracking/__tests__/googleTagManagerTest.ts",
                "message": "Property 'orderId' does not exist on type '{ paymentMethod: string | null | undefined; }'."
            },
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Property 'googleTagManagerDataLayer' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Property 'googleTagManagerDataLayer' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Property 'googleTagManagerDataLayer' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Property 'googleTagManagerDataLayer' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Property 'googleTagManagerDataLayer' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Property 'googleTagManagerDataLayer' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Property 'gtag_enable_tcf_support' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/helpers/utilities/logger.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Property 'offsetTop' does not exist on type 'null'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Property 'offsetHeight' does not exist on type 'null'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Property 'parentNode' does not exist on type 'null'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Property 'offsetTop' does not exist on type 'null'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/checkoutFormIsSubmittableActions.ts",
                "message": "Property 'enablePayPalButton' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/checkoutFormIsSubmittableActions.ts",
                "message": "Property 'enablePayPalButton' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/checkoutFormIsSubmittableActions.ts",
                "message": "Property 'disablePayPalButton' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/checkoutFormIsSubmittableActions.ts",
                "message": "Property 'disablePayPalButton' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/checkoutFormIsSubmittableActions.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/AmazonPay/AmazonPayWallet.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/AmazonPay/AmazonPayWallet.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionState.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionState.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionState.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'grecaptcha' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'grecaptcha' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'grecaptcha' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'grecaptcha' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'v2OnloadCallback' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'handleCardSetup' does not exist on type 'Stripe'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'grecaptcha' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'grecaptcha' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'v2OnloadCallback' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLanding.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLanding.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLanding.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Property 'stripePaymentMethod' does not exist on type 'PaymentAuthorisation'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Property 'stripePaymentMethod' does not exist on type 'PayPalAuthorisation'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Property 'stripePaymentMethod' does not exist on type 'PaymentAuthorisation'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Property 'stripePaymentMethod' does not exist on type 'PayPalAuthorisation'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Property 'stripePaymentMethod' does not exist on type 'PaymentAuthorisation'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Property 'stripePaymentMethod' does not exist on type 'PayPalAuthorisation'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingInit.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingInit.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/digitalSubscriptionCheckout.tsx",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/digitalSubscriptionLandingReducer.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Property 'checked' does not exist on type 'EventTarget'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "Property 'checked' does not exist on type 'EventTarget'."
            },
            {
                "path": "assets-ts/pages/showcase/components/hero.tsx",
                "message": "Property 'title' does not exist on type '{ title: string; caption: Element; images: { first: string; second: string; third: string; fourth: string; }; } | { title: string; caption: Element; images: { first: string; second: string; third: string; fourth: string; }; } | { ...; }'."
            },
            {
                "path": "assets-ts/pages/showcase/components/hero.tsx",
                "message": "Property 'title' does not exist on type '{ caption: Element; images: { first: string; second: string; third: string; fourth: string; }; }'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/api.ts",
                "message": "Property 'subscriptionCreationPending' does not exist on type '{ paymentStatus: \"success\"; } | { paymentStatus: \"success\"; subscriptionCreationPending: true; }'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/api.ts",
                "message": "Property 'subscriptionCreationPending' does not exist on type '{ paymentStatus: \"success\"; }'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/weeklySubscriptionLandingReducer.ts",
                "message": "Property 'guardian' does not exist on type 'Window & typeof globalThis'."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/weeklySubscriptionLandingReducer.ts",
                "message": "info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command."
            }
        ]
    },
    "TS6133": {
        "count": 25,
        "instances": [
            {
                "path": "assets-ts/components/directDebit/helpers/ajax.ts",
                "message": "'isTestUser' is declared but its value is never read."
            },
            {
                "path": "assets-ts/components/promotionSummary/promotionSummary.tsx",
                "message": "'discountAmount' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/forms/checkouts.ts",
                "message": "'allSwitches' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/amazonPay.ts",
                "message": "'resolve' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "'dispatch' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/forms/paymentIntegrations/payPalRecurringCheckout.ts",
                "message": "'formClassName' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/productPrice/priceDescriptions.ts",
                "message": "'billingPeriod' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/checkoutFormIsSubmittableActions.ts",
                "message": "'dispatch' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/formReducer.ts",
                "message": "'initialCountry' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/submit.ts",
                "message": "'isTestUser' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/submit.ts",
                "message": "'price' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/submit.ts",
                "message": "'currency' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/submit.ts",
                "message": "'dispatch' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/submit.ts",
                "message": "'country' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "'product' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "'countryGroupId' is declared but its value is never read."
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "'countryGroupId' is declared but its value is never read."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionAmount.tsx",
                "message": "'countryGroupId' is declared but its value is never read."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionTypeTabs.tsx",
                "message": "'renderControl' is declared but its value is never read."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutForm.tsx",
                "message": "'dispatch' is declared but its value is never read."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutFormGift.tsx",
                "message": "'dispatch' is declared but its value is never read."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.test.tsx",
                "message": "'content' is declared but its value is never read."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/paperCheckoutForm.tsx",
                "message": "'dispatch' is declared but its value is never read."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "'dispatch' is declared but its value is never read."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "'dispatch' is declared but its value is never read."
            }
        ]
    },
    "TS2564": {
        "count": 2,
        "instances": [
            {
                "path": "assets-ts/components/headers/header/header.tsx",
                "message": "Property 'observer' has no initializer and is not definitely assigned in the constructor."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/postcodeFinder.tsx",
                "message": "Property 'selectRef' has no initializer and is not definitely assigned in the constructor."
            }
        ]
    },
    "TS2769": {
        "count": 61,
        "instances": [
            {
                "path": "assets-ts/components/headers/header/header.tsx",
                "message": "No overload matches this call."
            },
            {
                "path": "assets-ts/components/headers/header/header.tsx",
                "message": "Overload 1 of 2, '(props: { utility: any; links: any; } | Readonly<{ utility: any; links: any; }>): MobileMenuToggler', gave the following error."
            },
            {
                "path": "assets-ts/components/headers/header/header.tsx",
                "message": "Type '{ links: Element; countryGroupId: CountryGroupId; utility: any; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<MobileMenuToggler> & Readonly<{ utility: any; links: any; }> & Readonly<...>'."
            },
            {
                "path": "assets-ts/components/headers/header/header.tsx",
                "message": "Property 'countryGroupId' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<MobileMenuToggler> & Readonly<{ utility: any; links: any; }> & Readonly<...>'."
            },
            {
                "path": "assets-ts/components/headers/header/header.tsx",
                "message": "Overload 2 of 2, '(props: { utility: any; links: any; }, context: any): MobileMenuToggler', gave the following error."
            },
            {
                "path": "assets-ts/components/headers/header/header.tsx",
                "message": "Type '{ links: Element; countryGroupId: CountryGroupId; utility: any; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<MobileMenuToggler> & Readonly<{ utility: any; links: any; }> & Readonly<...>'."
            },
            {
                "path": "assets-ts/components/headers/header/header.tsx",
                "message": "Property 'countryGroupId' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<MobileMenuToggler> & Readonly<{ utility: any; links: any; }> & Readonly<...>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFields.tsx",
                "message": "No overload matches this call."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFields.tsx",
                "message": "Overload 1 of 2, '(props: AugmentedProps<SelectProps>, context?: any): ReactElement<any, any> | Component<AugmentedProps<SelectProps>, any, any> | null', gave the following error."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFields.tsx",
                "message": "Type 'ReactNode' is not assignable to type 'Element'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFields.tsx",
                "message": "Overload 2 of 2, '(props: PropsWithChildren<AugmentedProps<SelectProps>>, context?: any): ReactElement<any, any> | Component<AugmentedProps<SelectProps>, any, any> | null', gave the following error."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFields.tsx",
                "message": "Type '{ children: (Element | ReactNode)[]; css: SerializedStyles; id: string; label: string; value: any; onChange: (e: ChangeEvent<HTMLSelectElement>) => any; error: any; isShown: boolean; }' is missing the following properties from type 'SelectProps': optional, hideLabel"
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/addressResultsHelpers.ts",
                "message": "No overload matches this call."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/addressResultsHelpers.ts",
                "message": "Overload 1 of 2, '(...items: ConcatArray<TextRegion>[]): TextRegion[]', gave the following error."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/addressResultsHelpers.ts",
                "message": "Argument of type '{ start: number; end: number; type: string; }[]' is not assignable to parameter of type 'ConcatArray<TextRegion>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/addressResultsHelpers.ts",
                "message": "The types returned by 'slice(...)' are incompatible between these types."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/addressResultsHelpers.ts",
                "message": "Type '{ start: number; end: number; type: string; }[]' is not assignable to type 'TextRegion[]'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/addressResultsHelpers.ts",
                "message": "Type '{ start: number; end: number; type: string; }' is not assignable to type 'TextRegion'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/addressResultsHelpers.ts",
                "message": "Types of property 'type' are incompatible."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/addressResultsHelpers.ts",
                "message": "Type 'string' is not assignable to type 'RegionType'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/addressResultsHelpers.ts",
                "message": "Overload 2 of 2, '(...items: (TextRegion | ConcatArray<TextRegion>)[]): TextRegion[]', gave the following error."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/addressResultsHelpers.ts",
                "message": "Argument of type '{ start: number; end: number; type: string; }[]' is not assignable to parameter of type 'TextRegion | ConcatArray<TextRegion>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/addressSearch/addressResultsHelpers.ts",
                "message": "Type '{ start: number; end: number; type: string; }[]' is not assignable to type 'ConcatArray<TextRegion>'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "No overload matches this call."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Overload 1 of 3, '(callbackfn: (previousValue: CardFieldName, currentValue: CardFieldName, currentIndex: number, array: CardFieldName[]) => CardFieldName, initialValue: CardFieldName): CardFieldName', gave the following error."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Argument of type '(newData: CardFieldsValidationOutput, cardFieldName: CardFieldName) => { fieldErrors: FormError<CardFieldName>[]; fieldData: { cardNumber: CardFieldData; cardExpiry: CardFieldData; cardCvc: CardFieldData; }; }' is not assignable to parameter of type '(previousValue: CardFieldName, currentValue: CardFieldName, currentIndex: number, array: CardFieldName[]) => CardFieldName'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Types of parameters 'newData' and 'previousValue' are incompatible."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Type 'string' is not assignable to type 'CardFieldsValidationOutput'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Type 'string' is not assignable to type 'CardFieldsValidationOutput'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Overload 2 of 3, '(callbackfn: (previousValue: { fieldErrors: FormError<CardFieldName>[]; fieldData: { cardNumber: CardFieldData; cardExpiry: CardFieldData; cardCvc: CardFieldData; }; }, currentValue: CardFieldName, currentIndex: number, array: CardFieldName[]) => { ...; }, initialValue: { ...; }): { ...; }', gave the following error."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Type '{}' is missing the following properties from type '{ cardNumber: CardFieldData; cardExpiry: CardFieldData; cardCvc: CardFieldData; }': cardNumber, cardExpiry, cardCvc"
            },
            {
                "path": "assets-ts/helpers/page/page.ts",
                "message": "No overload matches this call."
            },
            {
                "path": "assets-ts/helpers/page/page.ts",
                "message": "Overload 1 of 2, '(reducers: ReducersMapObject<{ page: S; common: CommonState; }, any>): Reducer<{ page: S; common: CommonState; }, AnyAction>', gave the following error."
            },
            {
                "path": "assets-ts/helpers/page/page.ts",
                "message": "Type 'Reducer<S, A> | null' is not assignable to type 'Reducer<S, any>'."
            },
            {
                "path": "assets-ts/helpers/page/page.ts",
                "message": "Type 'null' is not assignable to type 'Reducer<S, any>'."
            },
            {
                "path": "assets-ts/helpers/polyfills/layout.ts",
                "message": "No overload matches this call."
            },
            {
                "path": "assets-ts/helpers/polyfills/layout.ts",
                "message": "Overload 1 of 2, '(type: \"resize\", listener: (this: Window, ev: UIEvent) => any, options?: boolean | EventListenerOptions | undefined): void', gave the following error."
            },
            {
                "path": "assets-ts/helpers/polyfills/layout.ts",
                "message": "Argument of type '(arg0: Element[]) => void' is not assignable to parameter of type '(this: Window, ev: UIEvent) => any'."
            },
            {
                "path": "assets-ts/helpers/polyfills/layout.ts",
                "message": "Types of parameters 'arg0' and 'ev' are incompatible."
            },
            {
                "path": "assets-ts/helpers/polyfills/layout.ts",
                "message": "Type 'UIEvent' is missing the following properties from type 'Element[]': length, pop, push, concat, and 28 more."
            },
            {
                "path": "assets-ts/helpers/polyfills/layout.ts",
                "message": "Overload 2 of 2, '(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions | undefined): void', gave the following error."
            },
            {
                "path": "assets-ts/helpers/polyfills/layout.ts",
                "message": "Argument of type '(arg0: Element[]) => void' is not assignable to parameter of type 'EventListenerOrEventListenerObject'."
            },
            {
                "path": "assets-ts/helpers/polyfills/layout.ts",
                "message": "Type '(arg0: Element[]) => void' is not assignable to type 'EventListener'."
            },
            {
                "path": "assets-ts/helpers/polyfills/layout.ts",
                "message": "Types of parameters 'arg0' and 'evt' are incompatible."
            },
            {
                "path": "assets-ts/helpers/polyfills/layout.ts",
                "message": "Type 'Event' is missing the following properties from type 'Element[]': length, pop, push, concat, and 28 more."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/validation.ts",
                "message": "No overload matches this call."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/validation.ts",
                "message": "Overload 1 of 3, '(callbackfn: (previousValue: Rule<Err>, currentValue: Rule<Err>, currentIndex: number, array: Rule<Err>[]) => Rule<Err>, initialValue: Rule<Err>): Rule<...>', gave the following error."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/validation.ts",
                "message": "Type 'Err[]' is missing the following properties from type 'Rule<Err>': rule, error"
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/validation.ts",
                "message": "Overload 2 of 3, '(callbackfn: (previousValue: never[], currentValue: Rule<Err>, currentIndex: number, array: Rule<Err>[]) => never[], initialValue: never[]): never[]', gave the following error."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/validation.ts",
                "message": "Type 'Err[]' is not assignable to type 'never[]'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/validation.ts",
                "message": "Type 'Err' is not assignable to type 'never'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.test.tsx",
                "message": "No overload matches this call."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.test.tsx",
                "message": "Overload 1 of 2, '(ui: ReactElement<any, string | JSXElementConstructor<any>>, options?: Omit<RenderOptions<typeof import(\"/Users/george_haberis/code/support-frontend/support-frontend/node_modules/@testing-library/dom/types/queries\")>, \"queries\"> | undefined): RenderResult<...>', gave the following error."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.test.tsx",
                "message": "Type '({ children }: { children: any; }) => Element' is not assignable to type 'ComponentType<{}> | undefined'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.test.tsx",
                "message": "Type '({ children }: { children: any; }) => Element' is not assignable to type 'FunctionComponent<{}>'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.test.tsx",
                "message": "Types of parameters '__0' and 'props' are incompatible."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.test.tsx",
                "message": "Type '{ children?: ReactNode; }' is not assignable to type '{ children: any; }'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.test.tsx",
                "message": "Property 'children' is optional in type '{ children?: ReactNode; }' but required in type '{ children: any; }'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.test.tsx",
                "message": "Overload 2 of 2, '(ui: ReactElement<any, string | JSXElementConstructor<any>>, options: RenderOptions<Queries>): RenderResult<Queries>', gave the following error."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.test.tsx",
                "message": "Type '({ children }: { children: any; }) => Element' is not assignable to type 'ComponentType<{}> | undefined'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.test.tsx",
                "message": "Type '({ children }: { children: any; }) => Element' is not assignable to type 'FunctionComponent<{}>'."
            }
        ]
    },
    "TS2314": {
        "count": 8,
        "instances": [
            {
                "path": "assets-ts/components/orderSummary/orderSummary.tsx",
                "message": "Generic type '$Call' requires 1 type argument(s)."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFields.tsx",
                "message": "Generic type '$Call' requires 1 type argument(s)."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFieldsStore.ts",
                "message": "Generic type '$Call' requires 1 type argument(s)."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/postcodeFinderStore.ts",
                "message": "Generic type '$Call' requires 1 type argument(s)."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/summary.tsx",
                "message": "Generic type '$Call' requires 1 type argument(s)."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/orderSummary/orderSummary.tsx",
                "message": "Generic type '$Call' requires 1 type argument(s)."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/orderSummary/orderSummaryThankYou.tsx",
                "message": "Generic type '$Call' requires 1 type argument(s)."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.tsx",
                "message": "Generic type '$Call' requires 1 type argument(s)."
            }
        ]
    },
    "TS2554": {
        "count": 81,
        "instances": [
            {
                "path": "assets-ts/components/promotionSummary/promotionSummary.tsx",
                "message": "Expected 5 arguments, but got 3."
            },
            {
                "path": "assets-ts/components/promotionSummary/promotionSummary.tsx",
                "message": "Expected 5 arguments, but got 3."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/billingPeriodSelector.tsx",
                "message": "Expected 5 arguments, but got 4."
            },
            {
                "path": "assets-ts/helpers/__tests__/checkoutsTest.ts",
                "message": "Expected 3 arguments, but got 4."
            },
            {
                "path": "assets-ts/helpers/__tests__/checkoutsTest.ts",
                "message": "Expected 3 arguments, but got 4."
            },
            {
                "path": "assets-ts/helpers/__tests__/checkoutsTest.ts",
                "message": "Expected 3 arguments, but got 4."
            },
            {
                "path": "assets-ts/helpers/__tests__/checkoutsTest.ts",
                "message": "Expected 3 arguments, but got 4."
            },
            {
                "path": "assets-ts/helpers/__tests__/checkoutsTest.ts",
                "message": "Expected 3 arguments, but got 4."
            },
            {
                "path": "assets-ts/helpers/__tests__/checkoutsTest.ts",
                "message": "Expected 3 arguments, but got 4."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/__tests__/formValidation.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/abTests/abtest.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/weeklyProductPrice.ts",
                "message": "Expected 5 arguments, but got 4."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/weeklyProductPrice.ts",
                "message": "Expected 5 arguments, but got 4."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/weeklyProductPrice.ts",
                "message": "Expected 5 arguments, but got 4."
            },
            {
                "path": "assets-ts/helpers/productPrice/__tests__/weeklyProductPrice.ts",
                "message": "Expected 5 arguments, but got 4."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Expected 3 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Expected 6 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Expected 3 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Expected 6 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Expected 6 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/tracking/behaviour.ts",
                "message": "Expected 2 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/tracking/behaviour.ts",
                "message": "Expected 2 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/__tests__/userReducerTest.ts",
                "message": "Expected 0 arguments, but got 1."
            },
            {
                "path": "assets-ts/helpers/user/user.ts",
                "message": "Expected 1 arguments, but got 0."
            },
            {
                "path": "assets-ts/helpers/utilities/logger.ts",
                "message": "Expected 1 arguments, but got 2."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormContainer.tsx",
                "message": "Expected 1 arguments, but got 0."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYou.tsx",
                "message": "Expected 2 arguments, but got 1."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/PaymentMethodSelector.tsx",
                "message": "Expected 1 arguments, but got 0."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLanding.tsx",
                "message": "Expected 2 arguments, but got 1."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLanding.tsx",
                "message": "Expected 2 arguments, but got 1."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLanding.tsx",
                "message": "Expected 1 arguments, but got 0."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLanding.tsx",
                "message": "Expected 1 arguments, but got 0."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Expected 3 arguments, but got 2."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingInit.ts",
                "message": "Expected 1 arguments, but got 0."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutForm.tsx",
                "message": "Expected 5 arguments, but got 3."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutForm.tsx",
                "message": "Expected 5 arguments, but got 3."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutFormGift.tsx",
                "message": "Expected 5 arguments, but got 3."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/digitalCheckoutFormGift.tsx",
                "message": "Expected 5 arguments, but got 3."
            },
            {
                "path": "assets-ts/pages/digital-subscription-checkout/components/endSummary/endSummarySelector.ts",
                "message": "Expected 5 arguments, but got 3."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Expected 2 arguments, but got 1."
            },
            {
                "path": "assets-ts/pages/digital-subscription-landing/components/paymentSelection/helpers/paymentSelection.tsx",
                "message": "Expected 2 arguments, but got 1."
            },
            {
                "path": "assets-ts/pages/showcase/components/otherProducts.tsx",
                "message": "Expected 1 arguments, but got 0."
            },
            {
                "path": "assets-ts/pages/showcase/components/otherProducts.tsx",
                "message": "Expected 2 arguments, but got 1."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Expected 1 arguments, but got 0."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutForm.tsx",
                "message": "Expected 5 arguments, but got 4."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Expected 1 arguments, but got 0."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/components/weeklyCheckoutFormGifting.tsx",
                "message": "Expected 5 arguments, but got 4."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/weeklySubscriptionCheckout.tsx",
                "message": "Expected 1 arguments, but got 0."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-landing/components/weeklyProductPrices.tsx",
                "message": "Expected 5 arguments, but got 4."
            }
        ]
    },
    "TS2304": {
        "count": 20,
        "instances": [
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFields.tsx",
                "message": "Cannot find name 'GlobalState'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/addressFields.tsx",
                "message": "Cannot find name 'GlobalState'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/postcodeFinder.tsx",
                "message": "Cannot find name 'GlobalState'."
            },
            {
                "path": "assets-ts/helpers/customHooks/useHasBeenSeen.ts",
                "message": "Cannot find name 'IntersectionObserverOptions'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Cannot find name 'Stage'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Cannot find name 'Stage'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/formActions.ts",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/formActions.ts",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingActions.ts",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/paperPrices.tsx",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/tabs.tsx",
                "message": "Cannot find name 'Dispatch'."
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/components/stage.tsx",
                "message": "Cannot find name 'Dispatch'."
            }
        ]
    },
    "TS2741": {
        "count": 15,
        "instances": [
            {
                "path": "assets-ts/components/subscriptionCheckouts/address/postcodeFinder.tsx",
                "message": "Property 'label' is missing in type '{ onKeyPress: (e: KeyboardEvent<HTMLInputElement>) => void; css: SerializedStyles; name: string; width: 10; }' but required in type 'Pick<TextInputProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | \"translate\" | \"width\" | \"hidden\" | \"size\" | \"multiple\" | ... 275 more ... | \"src\">'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/paymentMethodSelector.tsx",
                "message": "Property 'value' is missing in type '{ id: string; image: any; label: string; name: string; checked: boolean; onChange: (...args: any[]) => any; }' but required in type 'Pick<RadioProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | \"translate\" | \"width\" | \"hidden\" | \"size\" | \"multiple\" | ... 274 more ... | \"src\">'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Property 'control' is missing in type '{}' but required in type 'ConfiguredRegionAmounts'."
            },
            {
                "path": "assets-ts/helpers/abTests/__tests__/abtestTest.ts",
                "message": "Property 'control' is missing in type '{}' but required in type 'ConfiguredRegionAmounts'."
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Property 'patrons' is missing in type '{ events: string; }' but required in type 'Record<MemProduct, string>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionForm.tsx",
                "message": "Property 'value' is missing in type '{ label: string; defaultChecked: boolean; onChange: () => void; }' but required in type 'Pick<CheckboxProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | \"translate\" | \"width\" | \"hidden\" | \"size\" | \"multiple\" | ... 274 more ... | \"src\">'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/components/ShareableArticleContainer.tsx",
                "message": "Property 'children' is missing in type '{ href: string; onClick: () => void; target: string; rel: string; priority: \"tertiary\"; size: \"default\"; icon: Element; css: SerializedStyles; hideLabel: true; }' but required in type 'Pick<LinkButtonProps, \"slot\" | \"style\" | \"title\" | \"children\" | \"color\" | \"translate\" | \"hidden\" | \"icon\" | \"className\" | \"cssOverrides\" | \"css\" | \"aria-label\" | ... 254 more ... | \"referrerPolicy\">'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/components/ShareableArticleContainer.tsx",
                "message": "Property 'children' is missing in type '{ href: string; onClick: () => void; target: string; rel: string; priority: \"tertiary\"; size: \"default\"; icon: Element; css: SerializedStyles; hideLabel: true; }' but required in type 'Pick<LinkButtonProps, \"slot\" | \"style\" | \"title\" | \"children\" | \"color\" | \"translate\" | \"hidden\" | \"icon\" | \"className\" | \"cssOverrides\" | \"css\" | \"aria-label\" | ... 254 more ... | \"referrerPolicy\">'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/components/ShareableArticleContainer.tsx",
                "message": "Property 'children' is missing in type '{ href: string; onClick: () => void; target: string; rel: string; priority: \"tertiary\"; size: \"default\"; icon: Element; css: SerializedStyles; hideLabel: true; }' but required in type 'Pick<LinkButtonProps, \"slot\" | \"style\" | \"title\" | \"children\" | \"color\" | \"translate\" | \"hidden\" | \"icon\" | \"className\" | \"cssOverrides\" | \"css\" | \"aria-label\" | ... 254 more ... | \"referrerPolicy\">'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYouMarketingConsent.tsx",
                "message": "Property 'value' is missing in type '{ checked: boolean; onChange: () => void; supporting: string; }' but required in type 'Pick<CheckboxProps, \"form\" | \"label\" | \"slot\" | \"style\" | \"title\" | \"pattern\" | \"children\" | \"color\" | \"height\" | \"translate\" | \"width\" | \"hidden\" | \"size\" | \"multiple\" | ... 274 more ... | \"src\">'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYouSocialShare.tsx",
                "message": "Property 'children' is missing in type '{ href: string; onClick: () => void; target: string; rel: string; priority: \"tertiary\"; size: \"default\"; icon: Element; hideLabel: true; }' but required in type 'Pick<LinkButtonProps, \"slot\" | \"style\" | \"title\" | \"children\" | \"color\" | \"translate\" | \"hidden\" | \"icon\" | \"className\" | \"cssOverrides\" | \"css\" | \"aria-label\" | ... 254 more ... | \"referrerPolicy\">'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYouSocialShare.tsx",
                "message": "Property 'children' is missing in type '{ href: string; onClick: () => void; target: string; rel: string; priority: \"tertiary\"; size: \"default\"; icon: Element; hideLabel: true; }' but required in type 'Pick<LinkButtonProps, \"slot\" | \"style\" | \"title\" | \"children\" | \"color\" | \"translate\" | \"hidden\" | \"icon\" | \"className\" | \"cssOverrides\" | \"css\" | \"aria-label\" | ... 254 more ... | \"referrerPolicy\">'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYouSocialShare.tsx",
                "message": "Property 'children' is missing in type '{ href: string; onClick: () => void; target: string; rel: string; priority: \"tertiary\"; size: \"default\"; icon: Element; hideLabel: true; }' but required in type 'Pick<LinkButtonProps, \"slot\" | \"style\" | \"title\" | \"children\" | \"color\" | \"translate\" | \"hidden\" | \"icon\" | \"className\" | \"cssOverrides\" | \"css\" | \"aria-label\" | ... 254 more ... | \"referrerPolicy\">'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYouSocialShare.tsx",
                "message": "Property 'children' is missing in type '{ href: string; onClick: () => void; target: string; rel: string; priority: \"tertiary\"; size: \"default\"; icon: Element; hideLabel: true; }' but required in type 'Pick<LinkButtonProps, \"slot\" | \"style\" | \"title\" | \"children\" | \"color\" | \"translate\" | \"hidden\" | \"icon\" | \"className\" | \"cssOverrides\" | \"css\" | \"aria-label\" | ... 254 more ... | \"referrerPolicy\">'."
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/helpers/orderSummaryText.ts",
                "message": "Property 'NoProductOptions' is missing in type '{ Saturday: string; SaturdayPlus: string; Sunday: string; SundayPlus: string; Weekend: string; WeekendPlus: string; Sixday: string; SixdayPlus: string; Everyday: string; EverydayPlus: string; }' but required in type 'Record<ProductOptions, string>'."
            }
        ]
    },
    "TS2531": {
        "count": 23,
        "instances": [
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/total/total.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/total/total.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/total/total.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/total/total.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/helpers/productPrice/priceDescriptions.ts",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/helpers/productPrice/priceDescriptions.ts",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/helpers/productPrice/priceDescriptions.ts",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionThankYou/ContributionThankYouArticleShare.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "Object is possibly 'null'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "Object is possibly 'null'."
            }
        ]
    },
    "TS2604": {
        "count": 4,
        "instances": [
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "JSX element type 'CardNumberWithError' does not have any construct or call signatures."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "JSX element type 'CardExpiryWithError' does not have any construct or call signatures."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "JSX element type 'CardCvcWithError' does not have any construct or call signatures."
            },
            {
                "path": "assets-ts/components/subscriptionCheckouts/stripeForm/stripeForm.tsx",
                "message": "JSX element type 'RecaptchaWithError' does not have any construct or call signatures."
            }
        ]
    },
    "TS2739": {
        "count": 25,
        "instances": [
            {
                "path": "assets-ts/components/subscriptionCheckouts/subscriptionsSurvey/SubscriptionsSurvey.tsx",
                "message": "Type '{ DigitalPack: string; GuardianWeekly: string; Paper: string; }' is missing the following properties from type 'Record<SubscriptionProduct, string>': PremiumTier, DailyEdition, PaperAndDigital"
            },
            {
                "path": "assets-ts/helpers/internationalisation/localCurrencyCountry.ts",
                "message": "Type '{ ONE_OFF: { amounts: number[]; defaultAmount: number; }; }' is missing the following properties from type 'ContributionAmounts': MONTHLY, ANNUAL"
            },
            {
                "path": "assets-ts/helpers/internationalisation/localCurrencyCountry.ts",
                "message": "Type '{ ONE_OFF: { min: number; minInWords: string; max: number; maxInWords: string; default: number; }; }' is missing the following properties from type 'Config': MONTHLY, ANNUAL"
            },
            {
                "path": "assets-ts/helpers/internationalisation/localCurrencyCountry.ts",
                "message": "Type '{ ONE_OFF: { amounts: number[]; defaultAmount: number; }; }' is missing the following properties from type 'ContributionAmounts': MONTHLY, ANNUAL"
            },
            {
                "path": "assets-ts/helpers/internationalisation/localCurrencyCountry.ts",
                "message": "Type '{ ONE_OFF: { min: number; minInWords: string; max: number; maxInWords: string; default: number; }; }' is missing the following properties from type 'Config': MONTHLY, ANNUAL"
            },
            {
                "path": "assets-ts/helpers/internationalisation/localCurrencyCountry.ts",
                "message": "Type '{ ONE_OFF: { amounts: number[]; defaultAmount: number; }; }' is missing the following properties from type 'ContributionAmounts': MONTHLY, ANNUAL"
            },
            {
                "path": "assets-ts/helpers/internationalisation/localCurrencyCountry.ts",
                "message": "Type '{ ONE_OFF: { min: number; minInWords: string; max: number; maxInWords: string; default: number; }; }' is missing the following properties from type 'Config': MONTHLY, ANNUAL"
            },
            {
                "path": "assets-ts/helpers/internationalisation/localCurrencyCountry.ts",
                "message": "Type '{ ONE_OFF: { amounts: number[]; defaultAmount: number; }; }' is missing the following properties from type 'ContributionAmounts': MONTHLY, ANNUAL"
            },
            {
                "path": "assets-ts/helpers/internationalisation/localCurrencyCountry.ts",
                "message": "Type '{ ONE_OFF: { min: number; minInWords: string; max: number; maxInWords: string; default: number; }; }' is missing the following properties from type 'Config': MONTHLY, ANNUAL"
            },
            {
                "path": "assets-ts/helpers/timeBoundedCopy/timeBoundedCopy.tsx",
                "message": "Type '{ digitalSubscription: { startShowingOn: string; stopShowingOn: string; copy: Element; }[]; }' is missing the following properties from type 'TimedCopyCollection': newspaper, guardianWeekly"
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type '{ DigitalPack: string; Paper: string; PaperAndDigital: string; GuardianWeekly: string; }' is missing the following properties from type 'PromoCodes': PremiumTier, DailyEdition"
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type '{ DigitalPack: string; Paper: string; PaperAndDigital: string; }' is missing the following properties from type 'PromoCodes': PremiumTier, DailyEdition, GuardianWeekly"
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type '{ DigitalPack: string; Paper: string; PaperAndDigital: string; }' is missing the following properties from type 'PromoCodes': PremiumTier, DailyEdition, GuardianWeekly"
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type '{ DigitalPack: string; Paper: string; PaperAndDigital: string; }' is missing the following properties from type 'PromoCodes': PremiumTier, DailyEdition, GuardianWeekly"
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type '{ DigitalPack: string; Paper: string; PaperAndDigital: string; }' is missing the following properties from type 'PromoCodes': PremiumTier, DailyEdition, GuardianWeekly"
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type '{ DigitalPack: string; Paper: string; PaperAndDigital: string; }' is missing the following properties from type 'PromoCodes': PremiumTier, DailyEdition, GuardianWeekly"
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type '{ DigitalPack: string; Paper: string; PaperAndDigital: string; }' is missing the following properties from type 'PromoCodes': PremiumTier, DailyEdition, GuardianWeekly"
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type '{ DigitalPack: string; Paper: string; PaperAndDigital: string; }' is missing the following properties from type 'PromoCodes': PremiumTier, DailyEdition, GuardianWeekly"
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type '{ DigitalPack: string; Paper: string; PaperAndDigital: string; }' is missing the following properties from type 'PromoCodes': PremiumTier, DailyEdition, GuardianWeekly"
            },
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "Type '{ DigitalPack: string; Paper: string; PaperAndDigital: string; }' is missing the following properties from type 'PromoCodes': PremiumTier, DailyEdition, GuardianWeekly"
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionAmountChoices.tsx",
                "message": "Type 'Element[]' is missing the following properties from type 'Element': type, props, key"
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "Type 'PaymentRequestObject' is missing the following properties from type 'PaymentRequest': canMakePayment, show, update, on"
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingReducer.ts",
                "message": "Type '{}' is missing the following properties from type 'SelectedAmounts': MONTHLY, ANNUAL, ONE_OFF"
            },
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/thankYou.tsx",
                "message": "Type '{ HomeDelivery: string[]; Collection: string[]; }' is missing the following properties from type 'Record<FulfilmentOptions, string[]>': Domestic, RestOfWorld, NoFulfilmentOptions"
            },
            {
                "path": "assets-ts/pages/subscriptions-redemption/subscriptionsRedemptionReducer.ts",
                "message": "Type '(...args: any[]) => any' is missing the following properties from type 'State': error, confirmOptIn, requestPending"
            }
        ]
    },
    "TS2532": {
        "count": 3,
        "instances": [
            {
                "path": "assets-ts/components/subscriptionCheckouts/summary.tsx",
                "message": "Object is possibly 'undefined'."
            },
            {
                "path": "assets-ts/helpers/productPrice/promotions.tsx",
                "message": "Object is possibly 'undefined'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripeCardForm/StripeCardForm.tsx",
                "message": "Object is possibly 'undefined'."
            }
        ]
    },
    "TS2556": {
        "count": 3,
        "instances": [
            {
                "path": "assets-ts/helpers/__tests__/contributionsTests.ts",
                "message": "A spread argument must either have a tuple type or be passed to a rest parameter."
            },
            {
                "path": "assets-ts/helpers/__tests__/contributionsTests.ts",
                "message": "A spread argument must either have a tuple type or be passed to a rest parameter."
            },
            {
                "path": "assets-ts/helpers/__tests__/contributionsTests.ts",
                "message": "A spread argument must either have a tuple type or be passed to a rest parameter."
            }
        ]
    },
    "TS2344": {
        "count": 9,
        "instances": [
            {
                "path": "assets-ts/helpers/campaigns/campaigns.ts",
                "message": "Type 'string' does not satisfy the constraint 'keyof IntrinsicElements | JSXElementConstructor<any>'."
            },
            {
                "path": "assets-ts/helpers/campaigns/campaigns.ts",
                "message": "Type 'string' does not satisfy the constraint 'keyof IntrinsicElements | JSXElementConstructor<any>'."
            },
            {
                "path": "assets-ts/helpers/campaigns/campaigns.ts",
                "message": "Type 'string' does not satisfy the constraint 'keyof IntrinsicElements | JSXElementConstructor<any>'."
            },
            {
                "path": "assets-ts/helpers/campaigns/campaigns.ts",
                "message": "Type 'string' does not satisfy the constraint 'keyof IntrinsicElements | JSXElementConstructor<any>'."
            },
            {
                "path": "assets-ts/helpers/campaigns/campaigns.ts",
                "message": "Type 'string' does not satisfy the constraint 'keyof IntrinsicElements | JSXElementConstructor<any>'."
            },
            {
                "path": "assets-ts/helpers/campaigns/campaigns.ts",
                "message": "Type 'string' does not satisfy the constraint 'keyof IntrinsicElements | JSXElementConstructor<any>'."
            },
            {
                "path": "assets-ts/helpers/page/page.ts",
                "message": "Type 'A' does not satisfy the constraint 'Action<any>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormContainer.tsx",
                "message": "Type 'string' does not satisfy the constraint 'keyof IntrinsicElements | JSXElementConstructor<any>'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/ContributionFormContainer.tsx",
                "message": "Type 'string' does not satisfy the constraint 'keyof IntrinsicElements | JSXElementConstructor<any>'."
            }
        ]
    },
    "TS2569": {
        "count": 2,
        "instances": [
            {
                "path": "assets-ts/helpers/checkoutForm/checkoutForm.ts",
                "message": "Type 'HTMLCollectionOf<HTMLInputElement>' is not an array type or a string type. Use compiler option '--downlevelIteration' to allow iterating of iterators."
            },
            {
                "path": "assets-ts/helpers/checkoutForm/checkoutForm.ts",
                "message": "Type 'HTMLFormControlsCollection' is not an array type or a string type. Use compiler option '--downlevelIteration' to allow iterating of iterators."
            }
        ]
    },
    "TS2571": {
        "count": 8,
        "instances": [
            {
                "path": "assets-ts/helpers/globalsAndSwitches/globals.ts",
                "message": "Object is of type 'unknown'."
            },
            {
                "path": "assets-ts/helpers/globalsAndSwitches/globals.ts",
                "message": "Object is of type 'unknown'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Object is of type 'unknown'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Object is of type 'unknown'."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/__tests__/subscriptionCheckoutReducerTest.ts",
                "message": "Object is of type 'unknown'."
            },
            {
                "path": "assets-ts/pages/promotion-terms/promotionTermsReducer.ts",
                "message": "Object is of type 'unknown'."
            },
            {
                "path": "assets-ts/pages/promotion-terms/promotionTermsReducer.ts",
                "message": "Object is of type 'unknown'."
            },
            {
                "path": "assets-ts/pages/promotion-terms/promotionTermsReducer.ts",
                "message": "Object is of type 'unknown'."
            }
        ]
    },
    "TS2411": {
        "count": 1,
        "instances": [
            {
                "path": "assets-ts/helpers/globalsAndSwitches/settings.ts",
                "message": "Property 'experiments' of type 'Record<string, { name: string; description: string; state: Status; }>' is not assignable to string index type 'SwitchObject'."
            }
        ]
    },
    "TS1016": {
        "count": 2,
        "instances": [
            {
                "path": "assets-ts/helpers/page/commonReducer.ts",
                "message": "A required parameter cannot follow an optional parameter."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "A required parameter cannot follow an optional parameter."
            }
        ]
    },
    "TS2707": {
        "count": 2,
        "instances": [
            {
                "path": "assets-ts/helpers/page/page.ts",
                "message": "Generic type 'Store<S, A>' requires between 0 and 2 type arguments."
            },
            {
                "path": "assets-ts/pages/contributions-landing/contributionsLandingInit.ts",
                "message": "Generic type 'Store<S, A>' requires between 0 and 2 type arguments."
            }
        ]
    },
    "TS2367": {
        "count": 3,
        "instances": [
            {
                "path": "assets-ts/helpers/polyfills/details.ts",
                "message": "This condition will always return 'true' since the types 'Element' and 'Document' have no overlap."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/content/linkTo.tsx",
                "message": "This condition will always return 'false' since the types 'PaperFulfilmentOptions' and '\"delivery\"' have no overlap."
            },
            {
                "path": "assets-ts/pages/weekly-subscription-checkout/helpers/__tests__/deliveryDays.ts",
                "message": "This condition will always return 'false' since the types '() => number' and 'number' have no overlap."
            }
        ]
    },
    "TS2740": {
        "count": 5,
        "instances": [
            {
                "path": "assets-ts/helpers/productPrice/productOptions.ts",
                "message": "Type '{ Saturday: \"SaturdayPlus\"; Sunday: \"SundayPlus\"; Weekend: \"WeekendPlus\"; Sixday: \"SixdayPlus\"; Everyday: \"EverydayPlus\"; }' is missing the following properties from type 'Record<ProductOptions, ProductOptions>': NoProductOptions, SaturdayPlus, SundayPlus, WeekendPlus, and 2 more."
            },
            {
                "path": "assets-ts/helpers/productPrice/productOptions.ts",
                "message": "Type '{ SaturdayPlus: \"Saturday\"; SundayPlus: \"Sunday\"; WeekendPlus: \"Weekend\"; SixdayPlus: \"Sixday\"; EverydayPlus: \"Everyday\"; }' is missing the following properties from type 'Record<ProductOptions, ProductOptions>': NoProductOptions, Saturday, Sunday, Weekend, and 2 more."
            },
            {
                "path": "assets-ts/helpers/productPrice/subscriptions.ts",
                "message": "Type '{ GBPCountries: number; }' is missing the following properties from type 'Record<CountryGroupId, number>': Canada, UnitedStates, AUDCountries, EURCountries, and 2 more."
            },
            {
                "path": "assets-ts/helpers/subscriptionsForms/validation.ts",
                "message": "Type 'Rule<Err>' is missing the following properties from type 'Err[]': length, pop, push, concat, and 28 more."
            },
            {
                "path": "assets-ts/pages/showcase/components/hero.tsx",
                "message": "Type 'Element' is missing the following properties from type 'String': charAt, charCodeAt, concat, indexOf, and 43 more."
            }
        ]
    },
    "TS2533": {
        "count": 2,
        "instances": [
            {
                "path": "assets-ts/helpers/productPrice/promotions.tsx",
                "message": "Object is possibly 'null' or 'undefined'."
            },
            {
                "path": "assets-ts/helpers/productPrice/promotions.tsx",
                "message": "Object is possibly 'null' or 'undefined'."
            }
        ]
    },
    "TS2722": {
        "count": 2,
        "instances": [
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Cannot invoke an object which is possibly 'undefined'."
            },
            {
                "path": "assets-ts/helpers/tracking/googleTagManager.ts",
                "message": "Cannot invoke an object which is possibly 'undefined'."
            }
        ]
    },
    "TS1337": {
        "count": 1,
        "instances": [
            {
                "path": "assets-ts/helpers/urls/externalLinks.ts",
                "message": "An index signature parameter type cannot be a union type. Consider using a mapped object type instead."
            }
        ]
    },
    "TS2694": {
        "count": 5,
        "instances": [
            {
                "path": "assets-ts/pages/aus-moment-map/components/map.tsx",
                "message": "Namespace 'React' has no exported member 'ReactNode'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Namespace 'React' has no exported member 'ReactNode'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Namespace 'React' has no exported member 'ReactNode'."
            },
            {
                "path": "assets-ts/pages/aus-moment-map/components/testimonialsContainer.tsx",
                "message": "Namespace 'React' has no exported member 'ReactNode'."
            },
            {
                "path": "assets-ts/pages/contributions-landing/components/StripePaymentRequestButton/StripePaymentRequestButton.tsx",
                "message": "Namespace '\"/Users/george_haberis/code/support-frontend/support-frontend/node_modules/@stripe/react-stripe-js/dist/react-stripe\"' has no exported member 'Stripe'."
            }
        ]
    },
    "TS2745": {
        "count": 2,
        "instances": [
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/addDigiSubCta.tsx",
                "message": "This JSX tag's 'children' prop expects type 'ReactElement<any, string | JSXElementConstructor<any>>[]' which requires multiple children, but only a single child was provided."
            },
            {
                "path": "assets-ts/pages/paper-subscription-landing/components/content/deliveryTab.tsx",
                "message": "This JSX tag's 'children' prop expects type 'ReactElement<any, string | JSXElementConstructor<any>>[]' which requires multiple children, but only a single child was provided."
            }
        ]
    },
    "TS2525": {
        "count": 1,
        "instances": [
            {
                "path": "assets-ts/pages/paper-subscription-checkout/components/orderSummary/orderSummary.test.tsx",
                "message": "Initializer provides no value for this binding element and the binding element has no default value."
            }
        ]
    },
    "TS2698": {
        "count": 6,
        "instances": [
            {
                "path": "assets-ts/pages/promotion-terms/promotionTermsReducer.ts",
                "message": "Spread types may only be created from object types."
            },
            {
                "path": "assets-ts/pages/subscriptions-landing/copy/subscriptionCopy.tsx",
                "message": "Spread types may only be created from object types."
            },
            {
                "path": "assets-ts/pages/subscriptions-landing/copy/subscriptionCopy.tsx",
                "message": "Spread types may only be created from object types."
            },
            {
                "path": "assets-ts/pages/subscriptions-landing/copy/subscriptionCopy.tsx",
                "message": "Spread types may only be created from object types."
            },
            {
                "path": "assets-ts/pages/subscriptions-landing/copy/subscriptionCopy.tsx",
                "message": "Spread types may only be created from object types."
            },
            {
                "path": "assets-ts/pages/subscriptions-landing/copy/subscriptionCopy.tsx",
                "message": "Spread types may only be created from object types."
            }
        ]
    }
}