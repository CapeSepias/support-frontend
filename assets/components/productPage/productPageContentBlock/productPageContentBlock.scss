@import '~stylesheets/gu-sass/gu-sass';

@mixin block-colours($border, $bg: null, $text: null) {
  @if($text){
    color: $text;
  }
  @if($bg){
    &, .component-product-page-content-block__bg {
      background-color: gu-colour(header-dark);
    }
  }
  &, .component-product-page-content-block__bg,
  & .component-left-margin-section__content,
  & .component-product-page-features .component-product-page-features__item {
    border-color: $border;
  }
  /*div > $selector adds some leeway for react wrapping elements*/
  & + &,
  & + div > &  {
    .component-left-margin-section__content {
      border-top: 1px solid $border;
    }
  }    
}

.component-product-page-content-block .component-left-margin-section__content {
  max-width: 100%;
  @include mq($from: tablet) {
    border-left: 1px solid gu-colour(garnett-neutral-4);
  }
}

.component-product-page-content-block--white {
  @include block-colours(
    $border: gu-colour(garnett-neutral-4)
  );
}

.component-product-page-content-block--grey {
  @include block-colours(
    $border: gu-colour(garnett-neutral-4),
    $bg: gu-colour(garnett-neutral-3),
  );
}

.component-product-page-content-block--feature {
  @include block-colours(
    $border: gu-colour(header-border),
    $bg: gu-colour(header-dark),
    $text: gu-colour(garnett-neutral-5),
  );
}

.component-product-page-content-block--dark {
  @include block-colours(
    $border: gu-colour(garnett-neutral-5),
    $text: gu-colour(garnett-neutral-5),
    $bg: gu-colour(garnett-neutral-7),
  );
}




.component-product-page-content-block__content {
  max-width: gu-span(12);
  padding: ($gu-v-spacing/2) ($gu-h-spacing / 2) 0;
}

.component-product-page-content-block__outset {
  margin-left: ($gu-h-spacing / 2 * -1);
  margin-right: ($gu-h-spacing / 2 * -1);
}

// ----- Vertical rhythm ------ //

.component-product-page-content-block {
  .component-product-page-text-block, 
  .component-product-page-plan-form,
  .component-product-page-info-chip {
    margin-bottom: ($gu-v-spacing*2)
  }
}
